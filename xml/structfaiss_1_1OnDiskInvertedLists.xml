<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1OnDiskInvertedLists" kind="struct" language="C++" prot="public">
    <compoundname>faiss::OnDiskInvertedLists</compoundname>
    <basecompoundref refid="structfaiss_1_1InvertedLists" prot="public" virt="non-virtual">faiss::InvertedLists</basecompoundref>
    <includes refid="OnDiskInvertedLists_8h" local="no">OnDiskInvertedLists.h</includes>
    <innerclass refid="structfaiss_1_1OnDiskInvertedLists_1_1Slot" prot="public">faiss::OnDiskInvertedLists::Slot</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfaiss_1_1OnDiskInvertedLists_1ab0bdb727091e04f877db89e733aeab7c" prot="public" static="no">
        <type><ref refid="structfaiss_1_1OnDiskOneList" kindref="compound">OnDiskOneList</ref></type>
        <definition>using faiss::OnDiskInvertedLists::List =  OnDiskOneList</definition>
        <argsstring></argsstring>
        <name>List</name>
        <qualifiedname>faiss::OnDiskInvertedLists::List</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="61" column="5" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="enum" id="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573" prot="public" static="no" strong="no">
        <type>int</type>
        <name>subset_type_t</name>
        <qualifiedname>faiss::InvertedLists::subset_type_t</qualifiedname>
        <enumvalue id="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573a92622c38feac08c114d0e5da0a46a64f" prot="public">
          <name>SUBSET_TYPE_ID_RANGE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573af2dcf35ecd64791d658dadb082d64119" prot="public">
          <name>SUBSET_TYPE_ID_MOD</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573adff0557b40fbf1001a01e45e39bd67ee" prot="public">
          <name>SUBSET_TYPE_ELEMENT_RANGE</name>
          <initializer>=
                2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573a5d55a8816a2f7a3f98de02e44a4976dc" prot="public">
          <name>SUBSET_TYPE_INVLIST_FRACTION</name>
          <initializer>=
                3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573a28818c3eeac36130c18c2e6bac7ee4ef" prot="public">
          <name>SUBSET_TYPE_INVLIST</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="144" column="5" bodyfile="faiss/invlists/InvertedLists.h" bodystart="144" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1a96715d36dae381fc45204f091198d932" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structfaiss_1_1OnDiskOneList" kindref="compound">List</ref> &gt;</type>
        <definition>std::vector&lt;List&gt; faiss::OnDiskInvertedLists::lists</definition>
        <argsstring></argsstring>
        <name>lists</name>
        <qualifiedname>faiss::OnDiskInvertedLists::lists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="64" column="17" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1acb138d838eeb3c732a8cf0b460f051a0" prot="public" static="no" mutable="no">
        <type>std::list&lt; <ref refid="structfaiss_1_1OnDiskInvertedLists_1_1Slot" kindref="compound">Slot</ref> &gt;</type>
        <definition>std::list&lt;Slot&gt; faiss::OnDiskInvertedLists::slots</definition>
        <argsstring></argsstring>
        <name>slots</name>
        <qualifiedname>faiss::OnDiskInvertedLists::slots</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="74" column="15" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1a9a6b94bbf12d81248cf3a093d8dddee0" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string faiss::OnDiskInvertedLists::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <qualifiedname>faiss::OnDiskInvertedLists::filename</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="76" column="17" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1a85ad4a6336e9593450aa555ea598194c" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::OnDiskInvertedLists::totsize</definition>
        <argsstring></argsstring>
        <name>totsize</name>
        <qualifiedname>faiss::OnDiskInvertedLists::totsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="77" column="12" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1a0adc16674053bb53b34b284f0a9c02a6" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* faiss::OnDiskInvertedLists::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>faiss::OnDiskInvertedLists::ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="78" column="13" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1accf9f3461466233fa612402437d0e5ff" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::OnDiskInvertedLists::read_only</definition>
        <argsstring></argsstring>
        <name>read_only</name>
        <qualifiedname>faiss::OnDiskInvertedLists::read_only</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="79" column="10" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1aebd05c108fe85af4b095dad8e8915421" prot="public" static="no" mutable="no">
        <type>LockLevels *</type>
        <definition>LockLevels* faiss::OnDiskInvertedLists::locks</definition>
        <argsstring></argsstring>
        <name>locks</name>
        <qualifiedname>faiss::OnDiskInvertedLists::locks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="122" column="16" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1a93eb0db0f7b9774061e956ef20f46550" prot="public" static="no" mutable="no">
        <type>OngoingPrefetch *</type>
        <definition>OngoingPrefetch* faiss::OnDiskInvertedLists::pf</definition>
        <argsstring></argsstring>
        <name>pf</name>
        <qualifiedname>faiss::OnDiskInvertedLists::pf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="126" column="21" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1OnDiskInvertedLists_1af8d76f7a52fe47da75e2845d2ac36797" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::OnDiskInvertedLists::prefetch_nthread</definition>
        <argsstring></argsstring>
        <name>prefetch_nthread</name>
        <qualifiedname>faiss::OnDiskInvertedLists::prefetch_nthread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="127" column="9" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1InvertedLists_1afaf8b7aa3e846aa4553f6aae67827ec8" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::InvertedLists::nlist</definition>
        <argsstring></argsstring>
        <name>nlist</name>
        <qualifiedname>faiss::InvertedLists::nlist</qualifiedname>
        <briefdescription>
<para>number of possible key values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="40" column="12" bodyfile="faiss/invlists/InvertedLists.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1InvertedLists_1ae06049e4259edb47d443ef87bdedc744" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::InvertedLists::code_size</definition>
        <argsstring></argsstring>
        <name>code_size</name>
        <qualifiedname>faiss::InvertedLists::code_size</qualifiedname>
        <briefdescription>
<para>code size per vector in bytes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="41" column="12" bodyfile="faiss/invlists/InvertedLists.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1InvertedLists_1a8d364ca073bda125730576b8cda17c9d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::InvertedLists::use_iterator</definition>
        <argsstring></argsstring>
        <name>use_iterator</name>
        <qualifiedname>faiss::InvertedLists::use_iterator</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>request to use iterator rather than get_codes / get_ids </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="44" column="10" bodyfile="faiss/invlists/InvertedLists.h" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1acce006c1c63aee12d45c7f7dbeb8bb23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::OnDiskInvertedLists::OnDiskInvertedLists</definition>
        <argsstring>(size_t nlist, size_t code_size, const char *filename)</argsstring>
        <name>OnDiskInvertedLists</name>
        <qualifiedname>faiss::OnDiskInvertedLists::OnDiskInvertedLists</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nlist</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>code_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>are inverted lists mapped read-only </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="81" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a19b264dfe5a541c1427d3b635ad887f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t faiss::OnDiskInvertedLists::list_size</definition>
        <argsstring>(size_t list_no) const override</argsstring>
        <name>list_size</name>
        <qualifiedname>faiss::OnDiskInvertedLists::list_size</qualifiedname>
        <reimplements refid="structfaiss_1_1InvertedLists_1a9bd256053ee360473842105460fe285f">list_size</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <briefdescription>
<para>get the size of a list </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="83" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a1695e1d8d64a00e8e5f57ebf2210cb87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t * faiss::OnDiskInvertedLists::get_codes</definition>
        <argsstring>(size_t list_no) const override</argsstring>
        <name>get_codes</name>
        <qualifiedname>faiss::OnDiskInvertedLists::get_codes</qualifiedname>
        <reimplements refid="structfaiss_1_1InvertedLists_1aa1be529b56651dc8b0f3530788af280b">get_codes</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the codes for an inverted list must be released by release_codes</para>
<para><simplesect kind="return"><para>codes size list_size * code_size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="84" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a52575d13fb83bdc9bd7a3af94db2ba82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
        <definition>const idx_t * faiss::OnDiskInvertedLists::get_ids</definition>
        <argsstring>(size_t list_no) const override</argsstring>
        <name>get_ids</name>
        <qualifiedname>faiss::OnDiskInvertedLists::get_ids</qualifiedname>
        <reimplements refid="structfaiss_1_1InvertedLists_1a3ada775764613c5491e95096232df8cc">get_ids</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the ids for an inverted list must be released by release_ids</para>
<para><simplesect kind="return"><para>ids size list_size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="85" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a762cfcc06fe60dbaa807ce72723531a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t faiss::OnDiskInvertedLists::add_entries</definition>
        <argsstring>(size_t list_no, size_t n_entry, const idx_t *ids, const uint8_t *code) override</argsstring>
        <name>add_entries</name>
        <qualifiedname>faiss::OnDiskInvertedLists::add_entries</qualifiedname>
        <reimplements refid="structfaiss_1_1InvertedLists_1a0a2adbbd1d6b4f8ed1cbfa9bb93f4401">add_entries</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_entry</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>ids</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="87" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a4d64d34d7ce9b242bb840c218fc3059c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::update_entries</definition>
        <argsstring>(size_t list_no, size_t offset, size_t n_entry, const idx_t *ids, const uint8_t *code) override</argsstring>
        <name>update_entries</name>
        <qualifiedname>faiss::OnDiskInvertedLists::update_entries</qualifiedname>
        <reimplements refid="structfaiss_1_1InvertedLists_1afb45f0f325bf82f73737d804f8dbf49e">update_entries</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_entry</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>ids</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a6b2faf11aea3dcb1dbf07a52af33099b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::resize</definition>
        <argsstring>(size_t list_no, size_t new_size) override</argsstring>
        <name>resize</name>
        <qualifiedname>faiss::OnDiskInvertedLists::resize</qualifiedname>
        <reimplements refid="structfaiss_1_1InvertedLists_1aae502a3372d94450e0b8ff4350b43610">resize</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1ab5b0cdf6bc8fd91ee99e930a8c4d67cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::OnDiskInvertedLists::merge_from_multiple</definition>
        <argsstring>(const InvertedLists **ils, int n_il, bool shift_ids=false, bool verbose=false)</argsstring>
        <name>merge_from_multiple</name>
        <qualifiedname>faiss::OnDiskInvertedLists::merge_from_multiple</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> **</type>
          <declname>ils</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_il</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shift_ids</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="104" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1af5d433fa2f151e2d32a216d83c977e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::OnDiskInvertedLists::merge_from_1</definition>
        <argsstring>(const InvertedLists *il, bool verbose=false)</argsstring>
        <name>merge_from_1</name>
        <qualifiedname>faiss::OnDiskInvertedLists::merge_from_1</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> *</type>
          <declname>il</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>same as merge_from for a single invlist </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="111" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a0dbb919e454c26aaa1b907bdf35d3b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::crop_invlists</definition>
        <argsstring>(size_t l0, size_t l1)</argsstring>
        <name>crop_invlists</name>
        <qualifiedname>faiss::OnDiskInvertedLists::crop_invlists</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>l0</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>l1</declname>
        </param>
        <briefdescription>
<para>restrict the inverted lists to l0:l1 without touching the mmapped region </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a04ad61e3a23ced0aea032bf1e699436d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::prefetch_lists</definition>
        <argsstring>(const idx_t *list_nos, int nlist) const override</argsstring>
        <name>prefetch_lists</name>
        <qualifiedname>faiss::OnDiskInvertedLists::prefetch_lists</qualifiedname>
        <reimplements refid="structfaiss_1_1InvertedLists_1aa661652a062ecb58b02f10d2a671c9fe">prefetch_lists</reimplements>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>list_nos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prepare the following lists (default does nothing) a list can be -1 hence the signed long </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1ac8f4c9cf887ec62b1e75e2af2f98253f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::OnDiskInvertedLists::~OnDiskInvertedLists</definition>
        <argsstring>() override</argsstring>
        <name>~OnDiskInvertedLists</name>
        <qualifiedname>faiss::OnDiskInvertedLists::~OnDiskInvertedLists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="118" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1afbdee1f61b80b7748028fa95d3d09a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::do_mmap</definition>
        <argsstring>()</argsstring>
        <name>do_mmap</name>
        <qualifiedname>faiss::OnDiskInvertedLists::do_mmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a11bf6949899bc7f11be17322dec68ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::update_totsize</definition>
        <argsstring>(size_t new_totsize)</argsstring>
        <name>update_totsize</name>
        <qualifiedname>faiss::OnDiskInvertedLists::update_totsize</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>new_totsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a48854bce4aa01698b5b3fb0d636caac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::resize_locked</definition>
        <argsstring>(size_t list_no, size_t new_size)</argsstring>
        <name>resize_locked</name>
        <qualifiedname>faiss::OnDiskInvertedLists::resize_locked</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a8f351c2423c5f87f61241eb7df8d50f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::OnDiskInvertedLists::allocate_slot</definition>
        <argsstring>(size_t capacity)</argsstring>
        <name>allocate_slot</name>
        <qualifiedname>faiss::OnDiskInvertedLists::allocate_slot</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="132" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a27fc559dcc2e48a7dded1a99540cb22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::free_slot</definition>
        <argsstring>(size_t offset, size_t capacity)</argsstring>
        <name>free_slot</name>
        <qualifiedname>faiss::OnDiskInvertedLists::free_slot</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1afac59f9ed8a6a70ade1eda9df31a977a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::OnDiskInvertedLists::set_all_lists_sizes</definition>
        <argsstring>(const size_t *sizes)</argsstring>
        <name>set_all_lists_sizes</name>
        <qualifiedname>faiss::OnDiskInvertedLists::set_all_lists_sizes</qualifiedname>
        <param>
          <type>const size_t *</type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
<para>override all list sizes and make a packed storage </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1OnDiskInvertedLists_1a5a2191421cbe2e3be7a3c25fb9de3793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::OnDiskInvertedLists::OnDiskInvertedLists</definition>
        <argsstring>()</argsstring>
        <name>OnDiskInvertedLists</name>
        <qualifiedname>faiss::OnDiskInvertedLists::OnDiskInvertedLists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/OnDiskInvertedLists.h" line="139" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a9a24bd313ece4e8e281f8bb28b5f528c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::InvertedLists::release_codes</definition>
        <argsstring>(size_t list_no, const uint8_t *codes) const</argsstring>
        <name>release_codes</name>
        <qualifiedname>faiss::InvertedLists::release_codes</qualifiedname>
        <reimplementedby refid="structfaiss_1_1ArrayInvertedListsPanorama_1a6d51dff4e225367cf876dae82060071f">release_codes</reimplementedby>
        <reimplementedby refid="structfaiss_1_1HStackInvertedLists_1ad431aa76dc678d71747dcbc9379d123a">release_codes</reimplementedby>
        <reimplementedby refid="structfaiss_1_1SliceInvertedLists_1a362456fac3002d1a5625a13dbfc0752b">release_codes</reimplementedby>
        <reimplementedby refid="structfaiss_1_1VStackInvertedLists_1a331222282fb32dc55d6f5847bbd1c848">release_codes</reimplementedby>
        <reimplementedby refid="structfaiss_1_1MaskedInvertedLists_1a64e66ef4c7dc387091f533cc61d88273">release_codes</reimplementedby>
        <reimplementedby refid="structfaiss_1_1StopWordsInvertedLists_1a5bec50625876ae22b9d092da7ab4fa31">release_codes</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>codes</declname>
        </param>
        <briefdescription>
<para>release codes returned by get_codes (default implementation is nop </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="75" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ad9bd9641ac86e0851d39a96119db3e78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::InvertedLists::release_ids</definition>
        <argsstring>(size_t list_no, const idx_t *ids) const</argsstring>
        <name>release_ids</name>
        <qualifiedname>faiss::InvertedLists::release_ids</qualifiedname>
        <reimplementedby refid="structfaiss_1_1HStackInvertedLists_1aa987a3ecea9f4df3340fd8c21f5d7000">release_ids</reimplementedby>
        <reimplementedby refid="structfaiss_1_1SliceInvertedLists_1ad3001048c22bcff5a1a8fb3c13d6a9ca">release_ids</reimplementedby>
        <reimplementedby refid="structfaiss_1_1VStackInvertedLists_1a3048d4656332d160502cd95b22b53be5">release_ids</reimplementedby>
        <reimplementedby refid="structfaiss_1_1MaskedInvertedLists_1a86c8d8c022c79c32b3f776f2ad4f3b1e">release_ids</reimplementedby>
        <reimplementedby refid="structfaiss_1_1StopWordsInvertedLists_1a50592d220d8c2cef81bb8da4ec9f453e">release_ids</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>ids</declname>
        </param>
        <briefdescription>
<para>release ids returned by get_ids </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="78" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ac1fb72410cefa4f4d28ec90677c02ab3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
        <definition>virtual idx_t faiss::InvertedLists::get_single_id</definition>
        <argsstring>(size_t list_no, size_t offset) const</argsstring>
        <name>get_single_id</name>
        <qualifiedname>faiss::InvertedLists::get_single_id</qualifiedname>
        <reimplementedby refid="structfaiss_1_1HStackInvertedLists_1a87091687f5fcc023f1db4c0f8c2c36da">get_single_id</reimplementedby>
        <reimplementedby refid="structfaiss_1_1SliceInvertedLists_1a929db2bf665fa28d7085fde76d0a371f">get_single_id</reimplementedby>
        <reimplementedby refid="structfaiss_1_1VStackInvertedLists_1a568b36928c391086da14f36eaf005fea">get_single_id</reimplementedby>
        <reimplementedby refid="structfaiss_1_1MaskedInvertedLists_1af0d9f7b61caef91e30124b0f7a9d44b9">get_single_id</reimplementedby>
        <reimplementedby refid="structfaiss_1_1StopWordsInvertedLists_1a620a47c96baabbcf3077071651f6e658">get_single_id</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a single id in an inverted list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="81" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1aa91b9da89f2992774d7c2becf8a0dcd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const uint8_t *</type>
        <definition>virtual const uint8_t * faiss::InvertedLists::get_single_code</definition>
        <argsstring>(size_t list_no, size_t offset) const</argsstring>
        <name>get_single_code</name>
        <qualifiedname>faiss::InvertedLists::get_single_code</qualifiedname>
        <reimplementedby refid="structfaiss_1_1ArrayInvertedListsPanorama_1a5fe070177b3ff02c1f85dadc0751b6ca">get_single_code</reimplementedby>
        <reimplementedby refid="structfaiss_1_1HStackInvertedLists_1aeef6bd41622796f5d142e60fe78a5da8">get_single_code</reimplementedby>
        <reimplementedby refid="structfaiss_1_1SliceInvertedLists_1abc95a98970bb7b4b044c5a61520c20d3">get_single_code</reimplementedby>
        <reimplementedby refid="structfaiss_1_1VStackInvertedLists_1a3c229e59737b533464f5403c5cf5fca4">get_single_code</reimplementedby>
        <reimplementedby refid="structfaiss_1_1MaskedInvertedLists_1a429657c4c203d472f59147f301de0ede">get_single_code</reimplementedby>
        <reimplementedby refid="structfaiss_1_1StopWordsInvertedLists_1a81569b31806959b50d0799c2763be534">get_single_code</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a single code in an inverted list (should be deallocated with release_codes) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="85" column="27"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1adc9d4472a745350a9dcbc92f799e73fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool faiss::InvertedLists::is_empty</definition>
        <argsstring>(size_t list_no, void *inverted_list_context=nullptr) const</argsstring>
        <name>is_empty</name>
        <qualifiedname>faiss::InvertedLists::is_empty</qualifiedname>
        <reimplementedby refid="structfaiss_1_1ArrayInvertedLists_1a88c4b8532f054274ec2ade7194e95698">is_empty</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>inverted_list_context</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>check if the list is empty </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="95" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a033771088288195d5098b3760a2e7c3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structfaiss_1_1InvertedListsIterator" kindref="compound">InvertedListsIterator</ref> *</type>
        <definition>virtual InvertedListsIterator * faiss::InvertedLists::get_iterator</definition>
        <argsstring>(size_t list_no, void *inverted_list_context=nullptr) const</argsstring>
        <name>get_iterator</name>
        <qualifiedname>faiss::InvertedLists::get_iterator</qualifiedname>
        <reimplementedby refid="structfaiss_1_1ArrayInvertedListsPanorama_1a8ef31fda6ea1aff6847983add66a06d4">get_iterator</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>inverted_list_context</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>get iterable for lists that use_iterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="99" column="35"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1aa8fe060cb73a42c570d7e835ab172356" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t faiss::InvertedLists::add_entry</definition>
        <argsstring>(size_t list_no, idx_t theid, const uint8_t *code, void *inverted_list_context=nullptr)</argsstring>
        <name>add_entry</name>
        <qualifiedname>faiss::InvertedLists::add_entry</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>theid</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>inverted_list_context</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>add one entry to an inverted list </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="107" column="20"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1aa4fca5b69a56ab5b65274f3ff5ca7705" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::InvertedLists::update_entry</definition>
        <argsstring>(size_t list_no, size_t offset, idx_t id, const uint8_t *code)</argsstring>
        <name>update_entry</name>
        <qualifiedname>faiss::InvertedLists::update_entry</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="119" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ada14d9bbf04c21b36f61971abece616e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::InvertedLists::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>faiss::InvertedLists::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="134" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ac2a0686121ef5bdd6eb70f7eb3cf9b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::InvertedLists::merge_from</definition>
        <argsstring>(InvertedLists *oivf, size_t add_id)</argsstring>
        <name>merge_from</name>
        <qualifiedname>faiss::InvertedLists::merge_from</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> *</type>
          <declname>oivf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>add_id</declname>
        </param>
        <briefdescription>
<para>move all entries from oivf (empty on output) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="140" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a8ceb168dc21abb9f9a711558a7ef4b71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::InvertedLists::copy_subset_to</definition>
        <argsstring>(InvertedLists &amp;other, subset_type_t subset_type, idx_t a1, idx_t a2) const</argsstring>
        <name>copy_subset_to</name>
        <qualifiedname>faiss::InvertedLists::copy_subset_to</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>subset_type_t</type>
          <declname>subset_type</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>a1</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copy a subset of the entries index to the other index <simplesect kind="return"><para>number of entries copied </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="161" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a022deb11a08e2dad3386369e90f946a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double faiss::InvertedLists::imbalance_factor</definition>
        <argsstring>() const</argsstring>
        <name>imbalance_factor</name>
        <qualifiedname>faiss::InvertedLists::imbalance_factor</qualifiedname>
        <briefdescription>
<para>1= perfectly balanced, &gt;1: imbalanced </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="171" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ac82ad98d664f6478aa919c0ec1b811cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::InvertedLists::print_stats</definition>
        <argsstring>() const</argsstring>
        <name>print_stats</name>
        <qualifiedname>faiss::InvertedLists::print_stats</qualifiedname>
        <briefdescription>
<para>display some stats about the inverted lists </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="174" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a903eed79c2fd1483c6e0eb500200da9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::InvertedLists::compute_ntotal</definition>
        <argsstring>() const</argsstring>
        <name>compute_ntotal</name>
        <qualifiedname>faiss::InvertedLists::compute_ntotal</qualifiedname>
        <briefdescription>
<para>sum up list sizes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="177" column="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structfaiss_1_1InvertedLists_1aae4b0f912ddda23dfef1085b4b683af7" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t faiss::InvertedLists::INVALID_CODE_SIZE</definition>
        <argsstring></argsstring>
        <name>INVALID_CODE_SIZE</name>
        <qualifiedname>faiss::InvertedLists::INVALID_CODE_SIZE</qualifiedname>
        <initializer>= static_cast&lt;size_t&gt;(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>used for <ref refid="structfaiss_1_1BlockInvertedLists" kindref="compound">BlockInvertedLists</ref>, where the codes are packed into groups and the individual code size is meaningless </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="52" column="25" bodyfile="faiss/invlists/InvertedLists.h" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>On-disk storage of inverted lists.</para>
<para>The data is stored in a mmapped chunk of memory (base pointer ptr, size totsize). Each list is a range of memory that contains (object List) that contains:</para>
<para><itemizedlist>
<listitem><para>uint8_t codes[capacity * code_size]</para>
</listitem><listitem><para>followed by idx_t ids[capacity]</para>
</listitem></itemizedlist>
</para>
<para>in each of the arrays, the size &lt;= capacity first elements are used, the rest is not initialized.</para>
<para>Addition and resize are supported by:<itemizedlist>
<listitem><para>roundind up the capacity of the lists to a power of two</para>
</listitem><listitem><para>maintaining a list of empty slots, sorted by size.</para>
</listitem><listitem><para>resizing the mmapped block is adjusted as needed.</para>
</listitem></itemizedlist>
</para>
<para>An <ref refid="structfaiss_1_1OnDiskInvertedLists" kindref="compound">OnDiskInvertedLists</ref> is compact if the size == capacity for all lists and there are no available slots.</para>
<para>Addition to the invlists is slow. For incremental add it is better to use a default <ref refid="structfaiss_1_1ArrayInvertedLists" kindref="compound">ArrayInvertedLists</ref> object and convert it to an OnDisk with merge_from.</para>
<para>When it is known that a set of lists will be accessed, it is useful to call prefetch_lists, that launches a set of threads to read the lists in parallel. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>faiss::InvertedLists</label>
        <link refid="structfaiss_1_1InvertedLists"/>
      </node>
      <node id="1">
        <label>faiss::OnDiskInvertedLists</label>
        <link refid="structfaiss_1_1OnDiskInvertedLists"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>faiss::InvertedLists</label>
        <link refid="structfaiss_1_1InvertedLists"/>
      </node>
      <node id="1">
        <label>faiss::OnDiskInvertedLists</label>
        <link refid="structfaiss_1_1OnDiskInvertedLists"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/invlists/OnDiskInvertedLists.h" line="60" column="1" bodyfile="faiss/invlists/OnDiskInvertedLists.h" bodystart="60" bodyend="140"/>
    <listofallmembers>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a762cfcc06fe60dbaa807ce72723531a9" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>add_entries</name></member>
      <member refid="structfaiss_1_1InvertedLists_1aa8fe060cb73a42c570d7e835ab172356" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>add_entry</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a8f351c2423c5f87f61241eb7df8d50f0" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>allocate_slot</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ae06049e4259edb47d443ef87bdedc744" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>code_size</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a903eed79c2fd1483c6e0eb500200da9f" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>compute_ntotal</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a8ceb168dc21abb9f9a711558a7ef4b71" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>copy_subset_to</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a0dbb919e454c26aaa1b907bdf35d3b55" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>crop_invlists</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1afbdee1f61b80b7748028fa95d3d09a6b" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>do_mmap</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a9a6b94bbf12d81248cf3a093d8dddee0" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>filename</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a27fc559dcc2e48a7dded1a99540cb22a" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>free_slot</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a1695e1d8d64a00e8e5f57ebf2210cb87" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>get_codes</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a52575d13fb83bdc9bd7a3af94db2ba82" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>get_ids</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a033771088288195d5098b3760a2e7c3a" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>get_iterator</name></member>
      <member refid="structfaiss_1_1InvertedLists_1aa91b9da89f2992774d7c2becf8a0dcd3" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>get_single_code</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ac1fb72410cefa4f4d28ec90677c02ab3" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>get_single_id</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a022deb11a08e2dad3386369e90f946a8" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>imbalance_factor</name></member>
      <member refid="structfaiss_1_1InvertedLists_1aae4b0f912ddda23dfef1085b4b683af7" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>INVALID_CODE_SIZE</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a83d053d03720d938dc4fc4e2f674619c" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>InvertedLists</name></member>
      <member refid="structfaiss_1_1InvertedLists_1adc9d4472a745350a9dcbc92f799e73fe" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>is_empty</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1ab0bdb727091e04f877db89e733aeab7c" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>List</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a19b264dfe5a541c1427d3b635ad887f5" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>list_size</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a96715d36dae381fc45204f091198d932" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>lists</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1aebd05c108fe85af4b095dad8e8915421" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>locks</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ac2a0686121ef5bdd6eb70f7eb3cf9b3a" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>merge_from</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1af5d433fa2f151e2d32a216d83c977e17" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>merge_from_1</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1ab5b0cdf6bc8fd91ee99e930a8c4d67cb" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>merge_from_multiple</name></member>
      <member refid="structfaiss_1_1InvertedLists_1afaf8b7aa3e846aa4553f6aae67827ec8" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>nlist</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1acce006c1c63aee12d45c7f7dbeb8bb23" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>OnDiskInvertedLists</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a5a2191421cbe2e3be7a3c25fb9de3793" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>OnDiskInvertedLists</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a93eb0db0f7b9774061e956ef20f46550" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>pf</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a04ad61e3a23ced0aea032bf1e699436d" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>prefetch_lists</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1af8d76f7a52fe47da75e2845d2ac36797" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>prefetch_nthread</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ac82ad98d664f6478aa919c0ec1b811cc" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>print_stats</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a0adc16674053bb53b34b284f0a9c02a6" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>ptr</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1accf9f3461466233fa612402437d0e5ff" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>read_only</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a9a24bd313ece4e8e281f8bb28b5f528c" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>release_codes</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ad9bd9641ac86e0851d39a96119db3e78" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>release_ids</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ada14d9bbf04c21b36f61971abece616e" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>reset</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a6b2faf11aea3dcb1dbf07a52af33099b" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>resize</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a48854bce4aa01698b5b3fb0d636caac0" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>resize_locked</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1afac59f9ed8a6a70ade1eda9df31a977a" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>set_all_lists_sizes</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1acb138d838eeb3c732a8cf0b460f051a0" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>slots</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573adff0557b40fbf1001a01e45e39bd67ee" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>SUBSET_TYPE_ELEMENT_RANGE</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573af2dcf35ecd64791d658dadb082d64119" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>SUBSET_TYPE_ID_MOD</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573a92622c38feac08c114d0e5da0a46a64f" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>SUBSET_TYPE_ID_RANGE</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573a28818c3eeac36130c18c2e6bac7ee4ef" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>SUBSET_TYPE_INVLIST</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573a5d55a8816a2f7a3f98de02e44a4976dc" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>SUBSET_TYPE_INVLIST_FRACTION</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a102adbbc3c4457ab23932e9113d98573" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>subset_type_t</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a85ad4a6336e9593450aa555ea598194c" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>totsize</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a4d64d34d7ce9b242bb840c218fc3059c" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>update_entries</name></member>
      <member refid="structfaiss_1_1InvertedLists_1aa4fca5b69a56ab5b65274f3ff5ca7705" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>update_entry</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1a11bf6949899bc7f11be17322dec68ee5" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>update_totsize</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a8d364ca073bda125730576b8cda17c9d" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>use_iterator</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a74508f4759d1b37c5a9e016c495d0dc1" prot="public" virt="virtual"><scope>faiss::OnDiskInvertedLists</scope><name>~InvertedLists</name></member>
      <member refid="structfaiss_1_1OnDiskInvertedLists_1ac8f4c9cf887ec62b1e75e2af2f98253f" prot="public" virt="non-virtual"><scope>faiss::OnDiskInvertedLists</scope><name>~OnDiskInvertedLists</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
