<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="platform__macros_8h" kind="file" language="C++">
    <compoundname>platform_macros.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cstdio</includes>
    <includedby refid="Index2Layer_8h" local="no">faiss/Index2Layer.h</includedby>
    <includedby refid="IndexAdditiveQuantizer_8h" local="no">faiss/IndexAdditiveQuantizer.h</includedby>
    <includedby refid="IndexBinaryHash_8h" local="no">faiss/IndexBinaryHash.h</includedby>
    <includedby refid="IndexIVF_8h" local="no">faiss/IndexIVF.h</includedby>
    <includedby refid="IndexIVFAdditiveQuantizer_8h" local="no">faiss/IndexIVFAdditiveQuantizer.h</includedby>
    <includedby refid="IndexIVFPQ_8h" local="no">faiss/IndexIVFPQ.h</includedby>
    <includedby refid="IndexPQ_8h" local="no">faiss/IndexPQ.h</includedby>
    <includedby refid="IndexRowwiseMinMax_8h" local="no">faiss/IndexRowwiseMinMax.h</includedby>
    <includedby refid="UintReader_8h" local="no">faiss/cppcontrib/detail/UintReader.h</includedby>
    <includedby refid="Level2-inl_8h" local="no">faiss/cppcontrib/sa_decode/Level2-inl.h</includedby>
    <includedby refid="AuxIndexStructures_8h" local="no">faiss/impl/AuxIndexStructures.h</includedby>
    <includedby refid="FaissAssert_8h" local="no">faiss/impl/FaissAssert.h</includedby>
    <includedby refid="HNSW_8h" local="no">faiss/impl/HNSW.h</includedby>
    <includedby refid="LocalSearchQuantizer_8h" local="no">faiss/impl/LocalSearchQuantizer.h</includedby>
    <includedby refid="NNDescent_8h" local="no">faiss/impl/NNDescent.h</includedby>
    <includedby refid="ProductQuantizer_8h" local="no">faiss/impl/ProductQuantizer.h</includedby>
    <includedby refid="RaBitQUtils_8h" local="no">faiss/impl/RaBitQUtils.h</includedby>
    <includedby refid="code__distance_8h" local="no">faiss/impl/code_distance/code_distance.h</includedby>
    <includedby refid="simd__result__handlers_8h" local="no">faiss/impl/simd_result_handlers.h</includedby>
    <includedby refid="AlignedTable_8h" local="no">faiss/utils/AlignedTable.h</includedby>
    <includedby refid="approx__topk_8h" local="no">faiss/utils/approx_topk/approx_topk.h</includedby>
    <includedby refid="distances_8h" local="no">faiss/utils/distances.h</includedby>
    <includedby refid="avx512_8h" local="no">faiss/utils/distances_fused/avx512.h</includedby>
    <includedby refid="simdlib__based_8h" local="no">faiss/utils/distances_fused/simdlib_based.h</includedby>
    <includedby refid="fp16_8h" local="no">faiss/utils/fp16.h</includedby>
    <includedby refid="hamming_8h" local="no">faiss/utils/hamming.h</includedby>
    <includedby refid="hamming__distance_2avx2-inl_8h" local="no">faiss/utils/hamming_distance/avx2-inl.h</includedby>
    <includedby refid="avx512-inl_8h" local="no">faiss/utils/hamming_distance/avx512-inl.h</includedby>
    <includedby refid="common_8h" local="no">faiss/utils/hamming_distance/common.h</includedby>
    <includedby refid="generic-inl_8h" local="no">faiss/utils/hamming_distance/generic-inl.h</includedby>
    <includedby refid="partitioning_8h" local="no">faiss/utils/partitioning.h</includedby>
    <includedby refid="simdlib__avx2_8h" local="no">faiss/utils/simdlib_avx2.h</includedby>
    <includedby refid="simdlib__avx512_8h" local="no">faiss/utils/simdlib_avx512.h</includedby>
    <includedby refid="sorting_8h" local="no">faiss/utils/sorting.h</includedby>
    <includedby refid="utils_8h" local="no">faiss/utils/utils.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>faiss/impl/platform_macros.h</label>
        <link refid="platform__macros_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="54">
        <label>faiss/AutoTune.h</label>
        <link refid="AutoTune_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>faiss/Clustering.h</label>
        <link refid="Clustering_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>faiss/IVFlib.h</label>
        <link refid="IVFlib_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>faiss/Index.h</label>
        <link refid="Index_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>faiss/Index2Layer.h</label>
        <link refid="Index2Layer_8h_source"/>
      </node>
      <node id="3">
        <label>faiss/IndexAdditiveQuantizer.h</label>
        <link refid="IndexAdditiveQuantizer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>faiss/IndexAdditiveQuantizerFastScan.h</label>
        <link refid="IndexAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="62">
        <label>faiss/IndexBinary.h</label>
        <link refid="IndexBinary_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>faiss/IndexBinaryFlat.h</label>
        <link refid="IndexBinaryFlat_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>faiss/IndexBinaryFromFloat.h</label>
        <link refid="IndexBinaryFromFloat_8h_source"/>
      </node>
      <node id="64">
        <label>faiss/IndexBinaryHNSW.h</label>
        <link refid="IndexBinaryHNSW_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>faiss/IndexBinaryHash.h</label>
        <link refid="IndexBinaryHash_8h_source"/>
      </node>
      <node id="9">
        <label>faiss/IndexBinaryIVF.h</label>
        <link refid="IndexBinaryIVF_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>faiss/IndexFastScan.h</label>
        <link refid="IndexFastScan_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>faiss/IndexFlat.h</label>
        <link refid="IndexFlat_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>faiss/IndexFlatCodes.h</label>
        <link refid="IndexFlatCodes_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>faiss/IndexHNSW.h</label>
        <link refid="IndexHNSW_8h_source"/>
      </node>
      <node id="67">
        <label>faiss/IndexIDMap.h</label>
        <link refid="IndexIDMap_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>faiss/IndexIVF.h</label>
        <link refid="IndexIVF_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>faiss/IndexIVFAdditiveQuantizer.h</label>
        <link refid="IndexIVFAdditiveQuantizer_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>faiss/IndexIVFAdditiveQuantizerFastScan.h</label>
        <link refid="IndexIVFAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="12">
        <label>faiss/IndexIVFFastScan.h</label>
        <link refid="IndexIVFFastScan_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>faiss/IndexIVFFlat.h</label>
        <link refid="IndexIVFFlat_8h_source"/>
      </node>
      <node id="16">
        <label>faiss/IndexIVFIndependentQuantizer.h</label>
        <link refid="IndexIVFIndependentQuantizer_8h_source"/>
      </node>
      <node id="17">
        <label>faiss/IndexIVFPQ.h</label>
        <link refid="IndexIVFPQ_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>faiss/IndexIVFPQFastScan.h</label>
        <link refid="IndexIVFPQFastScan_8h_source"/>
      </node>
      <node id="18">
        <label>faiss/IndexIVFPQR.h</label>
        <link refid="IndexIVFPQR_8h_source"/>
      </node>
      <node id="19">
        <label>faiss/IndexIVFRaBitQ.h</label>
        <link refid="IndexIVFRaBitQ_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>faiss/IndexIVFRaBitQFastScan.h</label>
        <link refid="IndexIVFRaBitQFastScan_8h_source"/>
      </node>
      <node id="20">
        <label>faiss/IndexIVFSpectralHash.h</label>
        <link refid="IndexIVFSpectralHash_8h_source"/>
      </node>
      <node id="81">
        <label>faiss/IndexLSH.h</label>
        <link refid="IndexLSH_8h_source"/>
      </node>
      <node id="82">
        <label>faiss/IndexLattice.h</label>
        <link refid="IndexLattice_8h_source"/>
      </node>
      <node id="77">
        <label>faiss/IndexNNDescent.h</label>
        <link refid="IndexNNDescent_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>faiss/IndexNSG.h</label>
        <link refid="IndexNSG_8h_source"/>
      </node>
      <node id="83">
        <label>faiss/IndexNeuralNetCodec.h</label>
        <link refid="IndexNeuralNetCodec_8h_source"/>
      </node>
      <node id="33">
        <label>faiss/IndexPQ.h</label>
        <link refid="IndexPQ_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>faiss/IndexPQFastScan.h</label>
        <link refid="IndexPQFastScan_8h_source"/>
      </node>
      <node id="85">
        <label>faiss/IndexPreTransform.h</label>
        <link refid="IndexPreTransform_8h_source"/>
      </node>
      <node id="84">
        <label>faiss/IndexRaBitQ.h</label>
        <link refid="IndexRaBitQ_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>faiss/IndexRaBitQFastScan.h</label>
        <link refid="IndexRaBitQFastScan_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>faiss/IndexRefine.h</label>
        <link refid="IndexRefine_8h_source"/>
      </node>
      <node id="69">
        <label>faiss/IndexReplicas.h</label>
        <link refid="IndexReplicas_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>faiss/IndexRowwiseMinMax.h</label>
        <link refid="IndexRowwiseMinMax_8h_source"/>
      </node>
      <node id="21">
        <label>faiss/IndexScalarQuantizer.h</label>
        <link refid="IndexScalarQuantizer_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>faiss/IndexShards.h</label>
        <link refid="IndexShards_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>faiss/IndexShardsIVF.h</label>
        <link refid="IndexShardsIVF_8h_source"/>
      </node>
      <node id="68">
        <label>faiss/MetaIndexes.h</label>
        <link refid="MetaIndexes_8h_source"/>
      </node>
      <node id="87">
        <label>faiss/VectorTransform.h</label>
        <link refid="VectorTransform_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>faiss/cppcontrib/SaDecodeKernels.h</label>
        <link refid="SaDecodeKernels_8h_source"/>
      </node>
      <node id="36">
        <label>faiss/cppcontrib/detail/UintReader.h</label>
        <link refid="UintReader_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>faiss/cppcontrib/sa_decode/Level2-avx2-inl.h</label>
        <link refid="Level2-avx2-inl_8h_source"/>
      </node>
      <node id="41">
        <label>faiss/cppcontrib/sa_decode/Level2-inl.h</label>
        <link refid="Level2-inl_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>faiss/cppcontrib/sa_decode/Level2-neon-inl.h</label>
        <link refid="Level2-neon-inl_8h_source"/>
      </node>
      <node id="127">
        <label>faiss/cppcontrib/sa_decode/MinMaxFP16-inl.h</label>
        <link refid="MinMaxFP16-inl_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>faiss/cppcontrib/sa_decode/PQ-avx2-inl.h</label>
        <link refid="PQ-avx2-inl_8h_source"/>
      </node>
      <node id="40">
        <label>faiss/cppcontrib/sa_decode/PQ-neon-inl.h</label>
        <link refid="PQ-neon-inl_8h_source"/>
      </node>
      <node id="55">
        <label>faiss/gpu/GpuAutoTune.h</label>
        <link refid="GpuAutoTune_8h_source"/>
      </node>
      <node id="57">
        <label>faiss/gpu/GpuCloner.h</label>
        <link refid="GpuCloner_8h_source"/>
      </node>
      <node id="88">
        <label>faiss/gpu/GpuDistance.h</label>
        <link refid="GpuDistance_8h_source"/>
      </node>
      <node id="101">
        <label>faiss/gpu/GpuFaissAssert.h</label>
        <link refid="GpuFaissAssert_8h_source"/>
      </node>
      <node id="80">
        <label>faiss/gpu/GpuIcmEncoder.h</label>
        <link refid="GpuIcmEncoder_8h_source"/>
      </node>
      <node id="89">
        <label>faiss/gpu/GpuIndex.h</label>
        <link refid="GpuIndex_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>faiss/gpu/GpuIndexBinaryCagra.h</label>
        <link refid="GpuIndexBinaryCagra_8h_source"/>
      </node>
      <node id="65">
        <label>faiss/gpu/GpuIndexBinaryFlat.h</label>
        <link refid="GpuIndexBinaryFlat_8h_source"/>
      </node>
      <node id="26">
        <label>faiss/gpu/GpuIndexCagra.h</label>
        <link refid="GpuIndexCagra_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>faiss/gpu/GpuIndexFlat.h</label>
        <link refid="GpuIndexFlat_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>faiss/gpu/GpuIndexIVF.h</label>
        <link refid="GpuIndexIVF_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>faiss/gpu/GpuIndexIVFFlat.h</label>
        <link refid="GpuIndexIVFFlat_8h_source"/>
      </node>
      <node id="30">
        <label>faiss/gpu/GpuIndexIVFPQ.h</label>
        <link refid="GpuIndexIVFPQ_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>faiss/gpu/GpuIndexIVFScalarQuantizer.h</label>
        <link refid="GpuIndexIVFScalarQuantizer_8h_source"/>
      </node>
      <node id="102">
        <label>faiss/gpu/GpuResources.h</label>
        <link refid="GpuResources_8h_source"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>faiss/gpu/StandardGpuResources.h</label>
        <link refid="StandardGpuResources_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>faiss/gpu/impl/IndexUtils.h</label>
        <link refid="IndexUtils_8h_source"/>
      </node>
      <node id="92">
        <label>faiss/gpu/impl/RemapIndices.h</label>
        <link refid="RemapIndices_8h_source"/>
      </node>
      <node id="107">
        <label>faiss/gpu/perf/IndexWrapper-inl.h</label>
        <link refid="IndexWrapper-inl_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>faiss/gpu/perf/IndexWrapper.h</label>
        <link refid="IndexWrapper_8h_source"/>
      </node>
      <node id="93">
        <label>faiss/gpu/test/TestUtils.h</label>
        <link refid="TestUtils_8h_source"/>
      </node>
      <node id="104">
        <label>faiss/gpu/utils/CuvsFilterConvert.h</label>
        <link refid="CuvsFilterConvert_8h_source"/>
      </node>
      <node id="105">
        <label>faiss/gpu/utils/CuvsUtils.h</label>
        <link refid="CuvsUtils_8h_source"/>
      </node>
      <node id="108">
        <label>faiss/gpu/utils/DeviceUtils.h</label>
        <link refid="DeviceUtils_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>faiss/gpu/utils/StackDeviceMemory.h</label>
        <link refid="StackDeviceMemory_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>faiss/impl/AdditiveQuantizer.h</label>
        <link refid="AdditiveQuantizer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>faiss/impl/AuxIndexStructures.h</label>
        <link refid="AuxIndexStructures_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>faiss/impl/DistanceComputer.h</label>
        <link refid="DistanceComputer_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>faiss/impl/FaissAssert.h</label>
        <link refid="FaissAssert_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>faiss/impl/HNSW.h</label>
        <link refid="HNSW_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>faiss/impl/LocalSearchQuantizer.h</label>
        <link refid="LocalSearchQuantizer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>faiss/impl/NNDescent.h</label>
        <link refid="NNDescent_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>faiss/impl/NSG.h</label>
        <link refid="NSG_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>faiss/impl/PolysemousTraining.h</label>
        <link refid="PolysemousTraining_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>faiss/impl/ProductAdditiveQuantizer.h</label>
        <link refid="ProductAdditiveQuantizer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>faiss/impl/ProductQuantizer.h</label>
        <link refid="ProductQuantizer_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>faiss/impl/RaBitQUtils.h</label>
        <link refid="RaBitQUtils_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>faiss/impl/RaBitQuantizer.h</label>
        <link refid="RaBitQuantizer_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>faiss/impl/ResidualQuantizer.h</label>
        <link refid="ResidualQuantizer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>faiss/impl/ResultHandler.h</label>
        <link refid="ResultHandler_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>faiss/impl/ScalarQuantizer.h</label>
        <link refid="ScalarQuantizer_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>faiss/impl/ThreadedIndex-inl.h</label>
        <link refid="ThreadedIndex-inl_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>faiss/impl/ThreadedIndex.h</label>
        <link refid="ThreadedIndex_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>faiss/impl/code_distance/code_distance.h</label>
        <link refid="code__distance_8h_source"/>
      </node>
      <node id="31">
        <label>faiss/impl/index_read_utils.h</label>
        <link refid="index__read__utils_8h_source"/>
      </node>
      <node id="111">
        <label>faiss/impl/io_macros.h</label>
        <link refid="io__macros_8h_source"/>
      </node>
      <node id="98">
        <label>faiss/impl/kmeans1d.h</label>
        <link refid="kmeans1d_8h_source"/>
      </node>
      <node id="112">
        <label>faiss/impl/mapped_io.h</label>
        <link refid="mapped__io_8h_source"/>
      </node>
      <node id="110">
        <label>faiss/impl/maybe_owned_vector.h</label>
        <link refid="maybe__owned__vector_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>faiss/impl/platform_macros.h</label>
        <link refid="platform__macros_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>faiss/impl/residual_quantizer_encode_steps.h</label>
        <link refid="residual__quantizer__encode__steps_8h_source"/>
      </node>
      <node id="46">
        <label>faiss/impl/simd_result_handlers.h</label>
        <link refid="simd__result__handlers_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>faiss/index_factory.h</label>
        <link refid="index__factory_8h_source"/>
      </node>
      <node id="114">
        <label>faiss/invlists/BlockInvertedLists.h</label>
        <link refid="BlockInvertedLists_8h_source"/>
      </node>
      <node id="115">
        <label>faiss/invlists/DirectMap.h</label>
        <link refid="DirectMap_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>faiss/invlists/InvertedLists.h</label>
        <link refid="InvertedLists_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>faiss/invlists/InvertedListsIOHook.h</label>
        <link refid="InvertedListsIOHook_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>faiss/invlists/OnDiskInvertedLists.h</label>
        <link refid="OnDiskInvertedLists_8h_source"/>
      </node>
      <node id="8">
        <label>faiss/python/python_callbacks.h</label>
        <link refid="python__callbacks_8h_source"/>
      </node>
      <node id="124">
        <label>faiss/utils/AlignedTable.h</label>
        <link refid="AlignedTable_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>faiss/utils/approx_topk/approx_topk.h</label>
        <link refid="approx__topk_8h_source"/>
      </node>
      <node id="117">
        <label>faiss/utils/approx_topk/avx2-inl.h</label>
        <link refid="approx__topk_2avx2-inl_8h_source"/>
      </node>
      <node id="118">
        <label>faiss/utils/approx_topk/generic.h</label>
        <link refid="generic_8h_source"/>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>faiss/utils/distances.h</label>
        <link refid="distances_8h_source"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>faiss/utils/distances_fused/avx512.h</label>
        <link refid="avx512_8h_source"/>
      </node>
      <node id="49">
        <label>faiss/utils/distances_fused/distances_fused.h</label>
        <link refid="distances__fused_8h_source"/>
      </node>
      <node id="50">
        <label>faiss/utils/distances_fused/simdlib_based.h</label>
        <link refid="simdlib__based_8h_source"/>
      </node>
      <node id="120">
        <label>faiss/utils/extra_distances-inl.h</label>
        <link refid="extra__distances-inl_8h_source"/>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>faiss/utils/extra_distances.h</label>
        <link refid="extra__distances_8h_source"/>
      </node>
      <node id="126">
        <label>faiss/utils/fp16.h</label>
        <link refid="fp16_8h_source"/>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>faiss/utils/hamming.h</label>
        <link refid="hamming_8h_source"/>
      </node>
      <node id="129">
        <label>faiss/utils/hamming_distance/avx2-inl.h</label>
        <link refid="hamming__distance_2avx2-inl_8h_source"/>
      </node>
      <node id="130">
        <label>faiss/utils/hamming_distance/avx512-inl.h</label>
        <link refid="avx512-inl_8h_source"/>
      </node>
      <node id="131">
        <label>faiss/utils/hamming_distance/common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>faiss/utils/hamming_distance/generic-inl.h</label>
        <link refid="generic-inl_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>faiss/utils/hamming_distance/hamdis-inl.h</label>
        <link refid="hamdis-inl_8h_source"/>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>faiss/utils/partitioning.h</label>
        <link refid="partitioning_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>faiss/utils/simdlib_avx2.h</label>
        <link refid="simdlib__avx2_8h_source"/>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>faiss/utils/simdlib_avx512.h</label>
        <link refid="simdlib__avx512_8h_source"/>
      </node>
      <node id="121">
        <label>faiss/utils/simdlib_neon.h</label>
        <link refid="simdlib__neon_8h_source"/>
      </node>
      <node id="137">
        <label>faiss/utils/sorting.h</label>
        <link refid="sorting_8h_source"/>
      </node>
      <node id="138">
        <label>faiss/utils/utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="platform__macros_8h_1a42c3236f250a1cda84bbf4932470fe89" prot="public" static="no">
        <name>FAISS_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="115" column="9" bodyfile="faiss/impl/platform_macros.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1a8bf69ed1a28e4db9afeea26ef5d0358e" prot="public" static="no">
        <name>posix_memalign_free</name>
        <initializer>free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="116" column="9" bodyfile="faiss/impl/platform_macros.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1a8e7a3bf6003d72a62606f343c2db6245" prot="public" static="no">
        <name>ALIGNED</name>
        <param><defname>x</defname></param>
        <initializer>__attribute__((aligned(x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="123" column="10" bodyfile="faiss/impl/platform_macros.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1ad7d30d301b7cb834b0671c66350fdb57" prot="public" static="no">
        <name>FAISS_ALWAYS_INLINE</name>
        <initializer>__attribute__((always_inline)) inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="126" column="9" bodyfile="faiss/impl/platform_macros.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1ad7da871f62652973e7e79c5445bd31a4" prot="public" static="no">
        <name>FAISS_DEPRECATED</name>
        <param><defname>msg</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="133" column="10" bodyfile="faiss/impl/platform_macros.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1a623b886a145661236460fb8c95129d83" prot="public" static="no">
        <name>FAISS_PRAGMA_IMPRECISE_LOOP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="184" column="10" bodyfile="faiss/impl/platform_macros.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1a0d4be9896374a3068094c050b1fdcb07" prot="public" static="no">
        <name>FAISS_PRAGMA_IMPRECISE_FUNCTION_BEGIN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="185" column="9" bodyfile="faiss/impl/platform_macros.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1a67c757ea9f8ddbedbacd421c993b5582" prot="public" static="no">
        <name>FAISS_PRAGMA_IMPRECISE_FUNCTION_END</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="186" column="9" bodyfile="faiss/impl/platform_macros.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1a1cecf34df3997353b021628410b9ef3e" prot="public" static="no">
        <name>Swap2Bytes</name>
        <param><defname>val</defname></param>
        <initializer>((((val) &gt;&gt; 8) &amp; 0x00FF) | (((val) &lt;&lt; 8) &amp; 0xFF00))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="199" column="9" bodyfile="faiss/impl/platform_macros.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="platform__macros_8h_1a09e79c0144214aac268e716674e71474" prot="public" static="no">
        <name>Swap4Bytes</name>
        <param><defname>val</defname></param>
        <initializer>    ((((val) &gt;&gt; 24) &amp; 0x000000FF) | (((val) &gt;&gt; 8) &amp; 0x0000FF00) | \
     (((val) &lt;&lt; 8) &amp; 0x00FF0000) | (((val) &lt;&lt; 24) &amp; 0xFF000000))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/platform_macros.h" line="201" column="9" bodyfile="faiss/impl/platform_macros.h" bodystart="201" bodyend="203"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Meta<sp/>Platforms,<sp/>Inc.<sp/>and<sp/>affiliates.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>basic<sp/>int<sp/>types<sp/>and<sp/>size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Windows<sp/>specific<sp/>macros</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FAISS_MAIN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_API<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>_FAISS_MAIN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_API<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FAISS_MAIN_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>strtok_r<sp/>strtok_s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PRETTY_FUNCTION__<sp/>__FUNCSIG__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>posix_memalign(p,<sp/>a,<sp/>s)<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((*(p))<sp/>=<sp/>_aligned_malloc((s),<sp/>(a))),<sp/>*(p)<sp/>?<sp/>0<sp/>:<sp/>errno)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>posix_memalign_free<sp/>_aligned_free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>aligned<sp/>should<sp/>be<sp/>in<sp/>front<sp/>of<sp/>the<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALIGNED(x)<sp/>__declspec(align(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>redefine<sp/>the<sp/>GCC<sp/>intrinsics<sp/>with<sp/>Windows<sp/>equivalents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;intrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__builtin_ctzll(uint64_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>_BitScanForward64(&amp;ret,<sp/>x);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ret;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cudatoolkit<sp/>provides<sp/>__builtin_ctz<sp/>for<sp/>NVCC<sp/>&gt;=<sp/>11.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>__CUDACC_VER_MAJOR__<sp/>&lt;<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__builtin_ctz(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>_BitScanForward(&amp;ret,<sp/>x);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ret;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__builtin_clzll(uint64_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_M_X64)<sp/>||<sp/>defined(__x86_64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)__lzcnt64(x);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_M_ARM64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t)<sp/>*<sp/>CHAR_BIT;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_BitScanReverse64(&amp;index,<sp/>x))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>count<sp/>-<sp/>1<sp/>-<sp/>index;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__builtin_popcount<sp/>__popcnt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__builtin_popcountl<sp/>__popcnt64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__builtin_popcountll<sp/>__popcnt64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__m128i_u<sp/>__m128i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__m256i_u<sp/>__m256i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MSVC<sp/>does<sp/>not<sp/>define<sp/>__SSEx__,<sp/>and<sp/>_M_IX86_FP<sp/>is<sp/>only<sp/>defined<sp/>on<sp/>32-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>processors<sp/>cf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVX__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SSE__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SSE2__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SSE3__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SSE4_1__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SSE4_2__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MSVC<sp/>sets<sp/>FMA<sp/>and<sp/>F16C<sp/>automatically<sp/>when<sp/>using<sp/>AVX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ref.<sp/>FMA<sp/>(under<sp/>/arch:AVX2):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://docs.microsoft.com/en-us/cpp/build/reference/arch-x64<sp/>Ref.<sp/>F16C<sp/>(2nd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>paragraph):<sp/>https://walbourn.github.io/directxmath-avx2/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVX2__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FMA__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__F16C__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_ALWAYS_INLINE<sp/>__forceinline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>Linux<sp/>and<sp/>OSX</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>posix_memalign_free<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>aligned<sp/>should<sp/>be<sp/>*in<sp/>front*<sp/>of<sp/>the<sp/>declaration,<sp/>for<sp/>compatibility<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALIGNED(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALIGNED(x)<sp/>__attribute__((aligned(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_ALWAYS_INLINE<sp/>__attribute__((always_inline))<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_DEPRECATED(msg)<sp/>__attribute__((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_DEPRECATED(msg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>or<sp/>Clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Localized<sp/>enablement<sp/>of<sp/>imprecise<sp/>floating<sp/>point<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>need<sp/>to<sp/>use<sp/>all<sp/>3<sp/>macros<sp/>to<sp/>cover<sp/>all<sp/>compilers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_BEGIN<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__pragma(float_control(precise,<sp/>off,<sp/>push))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_END<sp/>__pragma(float_control(pop))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__PPC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_LOOP<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Pragma(&quot;clang<sp/>loop<sp/>vectorize_width(4)<sp/>interleave_count(8)&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_BEGIN<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Pragma(&quot;float_control(precise,<sp/>off,<sp/>push)&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_END<sp/>_Pragma(&quot;float_control(pop)&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_LOOP<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Pragma(&quot;clang<sp/>loop<sp/>vectorize(enable)<sp/>interleave(enable)&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>ifdef<sp/>is<sp/>needed,<sp/>because<sp/>old<sp/>versions<sp/>of<sp/>clang<sp/>(prior<sp/>to<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>generate<sp/>FMAs<sp/>on<sp/>x86<sp/>unless<sp/>this<sp/>pragma<sp/>is<sp/>used.<sp/>On<sp/>the<sp/>other<sp/>hand,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARM<sp/>does<sp/>not<sp/>support<sp/>the<sp/>following<sp/>pragma<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>find<sp/>out<sp/>how<sp/>to<sp/>enable<sp/>FMAs<sp/>on<sp/>clang<sp/>10<sp/>and<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__x86_64__)<sp/>&amp;&amp;<sp/>(defined(__clang_major__)<sp/>&amp;&amp;<sp/>(__clang_major__<sp/>&gt;<sp/>10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_BEGIN<sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Pragma(&quot;float_control(precise,<sp/>off,<sp/>push)&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_END<sp/>_Pragma(&quot;float_control(pop)&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unfortunately,<sp/>GCC<sp/>does<sp/>not<sp/>provide<sp/>a<sp/>pragma<sp/>for<sp/>detecting<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>So,<sp/>we<sp/>have<sp/>to<sp/>stick<sp/>to<sp/>GNUC,<sp/>which<sp/>is<sp/>defined<sp/>by<sp/>MANY<sp/>compilers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>why<sp/>clang/icc<sp/>needs<sp/>to<sp/>be<sp/>checked<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>todo:<sp/>add<sp/>__INTEL_COMPILER<sp/>check<sp/>for<sp/>the<sp/>classic<sp/>ICC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>todo:<sp/>add<sp/>__INTEL_LLVM_COMPILER<sp/>for<sp/>ICX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_BEGIN<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Pragma(&quot;GCC<sp/>push_options&quot;)<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Pragma(&quot;GCC<sp/>optimize<sp/>(\&quot;unroll-loops,associative-math,no-signed-zeros\&quot;)&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_END<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Pragma(&quot;GCC<sp/>pop_options&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_LOOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_PRAGMA_IMPRECISE_FUNCTION_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>BIGENDIAN<sp/>specific<sp/>macros</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_MSC_VER)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(defined(__BYTE_ORDER__)<sp/>&amp;&amp;<sp/>(__BYTE_ORDER__<sp/>==<sp/>__ORDER_BIG_ENDIAN__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Swap2Bytes(val)<sp/>((((val)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x00FF)<sp/>|<sp/>(((val)<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Swap4Bytes(val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((((val)<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0x000000FF)<sp/>|<sp/>(((val)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x0000FF00)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(((val)<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0x00FF0000)<sp/>|<sp/>(((val)<sp/>&lt;&lt;<sp/>24)<sp/>&amp;<sp/>0xFF000000))</highlight></codeline>
    </programlisting>
    <location file="faiss/impl/platform_macros.h"/>
  </compounddef>
</doxygen>
