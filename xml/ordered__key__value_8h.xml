<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="ordered__key__value_8h" kind="file" language="C++">
    <compoundname>ordered_key_value.h</compoundname>
    <includes local="no">climits</includes>
    <includes local="no">cmath</includes>
    <includes local="no">limits</includes>
    <includedby refid="Heap_8h" local="no">faiss/utils/Heap.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>faiss/utils/ordered_key_value.h</label>
        <link refid="ordered__key__value_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>climits</label>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>faiss/IVFlib.h</label>
        <link refid="IVFlib_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>faiss/Index2Layer.h</label>
        <link refid="Index2Layer_8h_source"/>
      </node>
      <node id="58">
        <label>faiss/IndexAdditiveQuantizer.h</label>
        <link refid="IndexAdditiveQuantizer_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>faiss/IndexAdditiveQuantizerFastScan.h</label>
        <link refid="IndexAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="35">
        <label>faiss/IndexBinaryHNSW.h</label>
        <link refid="IndexBinaryHNSW_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>faiss/IndexBinaryHash.h</label>
        <link refid="IndexBinaryHash_8h_source"/>
      </node>
      <node id="4">
        <label>faiss/IndexBinaryIVF.h</label>
        <link refid="IndexBinaryIVF_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>faiss/IndexHNSW.h</label>
        <link refid="IndexHNSW_8h_source"/>
      </node>
      <node id="7">
        <label>faiss/IndexIVF.h</label>
        <link refid="IndexIVF_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>faiss/IndexIVFAdditiveQuantizer.h</label>
        <link refid="IndexIVFAdditiveQuantizer_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>faiss/IndexIVFAdditiveQuantizerFastScan.h</label>
        <link refid="IndexIVFAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="11">
        <label>faiss/IndexIVFFastScan.h</label>
        <link refid="IndexIVFFastScan_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>faiss/IndexIVFFlat.h</label>
        <link refid="IndexIVFFlat_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>faiss/IndexIVFFlatPanorama.h</label>
        <link refid="IndexIVFFlatPanorama_8h_source"/>
      </node>
      <node id="16">
        <label>faiss/IndexIVFIndependentQuantizer.h</label>
        <link refid="IndexIVFIndependentQuantizer_8h_source"/>
      </node>
      <node id="17">
        <label>faiss/IndexIVFPQ.h</label>
        <link refid="IndexIVFPQ_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>faiss/IndexIVFPQFastScan.h</label>
        <link refid="IndexIVFPQFastScan_8h_source"/>
      </node>
      <node id="18">
        <label>faiss/IndexIVFPQR.h</label>
        <link refid="IndexIVFPQR_8h_source"/>
      </node>
      <node id="19">
        <label>faiss/IndexIVFRaBitQ.h</label>
        <link refid="IndexIVFRaBitQ_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>faiss/IndexIVFRaBitQFastScan.h</label>
        <link refid="IndexIVFRaBitQFastScan_8h_source"/>
      </node>
      <node id="20">
        <label>faiss/IndexIVFSpectralHash.h</label>
        <link refid="IndexIVFSpectralHash_8h_source"/>
      </node>
      <node id="37">
        <label>faiss/IndexNNDescent.h</label>
        <link refid="IndexNNDescent_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>faiss/IndexNSG.h</label>
        <link refid="IndexNSG_8h_source"/>
      </node>
      <node id="40">
        <label>faiss/IndexPQ.h</label>
        <link refid="IndexPQ_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>faiss/IndexPQFastScan.h</label>
        <link refid="IndexPQFastScan_8h_source"/>
      </node>
      <node id="33">
        <label>faiss/IndexRaBitQFastScan.h</label>
        <link refid="IndexRaBitQFastScan_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>faiss/IndexScalarQuantizer.h</label>
        <link refid="IndexScalarQuantizer_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>faiss/IndexShardsIVF.h</label>
        <link refid="IndexShardsIVF_8h_source"/>
      </node>
      <node id="60">
        <label>faiss/gpu/GpuIcmEncoder.h</label>
        <link refid="GpuIcmEncoder_8h_source"/>
      </node>
      <node id="27">
        <label>faiss/gpu/GpuIndexBinaryCagra.h</label>
        <link refid="GpuIndexBinaryCagra_8h_source"/>
      </node>
      <node id="26">
        <label>faiss/gpu/GpuIndexCagra.h</label>
        <link refid="GpuIndexCagra_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>faiss/gpu/GpuIndexIVF.h</label>
        <link refid="GpuIndexIVF_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>faiss/gpu/GpuIndexIVFFlat.h</label>
        <link refid="GpuIndexIVFFlat_8h_source"/>
      </node>
      <node id="30">
        <label>faiss/gpu/GpuIndexIVFPQ.h</label>
        <link refid="GpuIndexIVFPQ_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>faiss/gpu/GpuIndexIVFScalarQuantizer.h</label>
        <link refid="GpuIndexIVFScalarQuantizer_8h_source"/>
      </node>
      <node id="34">
        <label>faiss/impl/HNSW.h</label>
        <link refid="HNSW_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>faiss/impl/LocalSearchQuantizer.h</label>
        <link refid="LocalSearchQuantizer_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>faiss/impl/NNDescent.h</label>
        <link refid="NNDescent_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>faiss/impl/NSG.h</label>
        <link refid="NSG_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>faiss/impl/PolysemousTraining.h</label>
        <link refid="PolysemousTraining_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>faiss/impl/ProductAdditiveQuantizer.h</label>
        <link refid="ProductAdditiveQuantizer_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>faiss/impl/ProductQuantizer.h</label>
        <link refid="ProductQuantizer_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>faiss/impl/ResultHandler.h</label>
        <link refid="ResultHandler_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>faiss/impl/index_read_utils.h</label>
        <link refid="index__read__utils_8h_source"/>
      </node>
      <node id="44">
        <label>faiss/impl/simd_result_handlers.h</label>
        <link refid="simd__result__handlers_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>faiss/invlists/OnDiskInvertedLists.h</label>
        <link refid="OnDiskInvertedLists_8h_source"/>
      </node>
      <node id="6">
        <label>faiss/python/python_callbacks.h</label>
        <link refid="python__callbacks_8h_source"/>
      </node>
      <node id="2">
        <label>faiss/utils/Heap.h</label>
        <link refid="Heap_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>faiss/utils/approx_topk/approx_topk.h</label>
        <link refid="approx__topk_8h_source"/>
      </node>
      <node id="48">
        <label>faiss/utils/approx_topk/avx2-inl.h</label>
        <link refid="approx__topk_2avx2-inl_8h_source"/>
      </node>
      <node id="49">
        <label>faiss/utils/approx_topk/generic.h</label>
        <link refid="generic_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>faiss/utils/approx_topk_hamming/approx_topk_hamming.h</label>
        <link refid="approx__topk__hamming_8h_source"/>
      </node>
      <node id="52">
        <label>faiss/utils/distances.h</label>
        <link refid="distances_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>faiss/utils/distances_fused/avx512.h</label>
        <link refid="avx512_8h_source"/>
      </node>
      <node id="46">
        <label>faiss/utils/distances_fused/distances_fused.h</label>
        <link refid="distances__fused_8h_source"/>
      </node>
      <node id="47">
        <label>faiss/utils/distances_fused/simdlib_based.h</label>
        <link refid="simdlib__based_8h_source"/>
      </node>
      <node id="53">
        <label>faiss/utils/extra_distances-inl.h</label>
        <link refid="extra__distances-inl_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>faiss/utils/extra_distances.h</label>
        <link refid="extra__distances_8h_source"/>
      </node>
      <node id="55">
        <label>faiss/utils/hamming.h</label>
        <link refid="hamming_8h_source"/>
      </node>
      <node id="1">
        <label>faiss/utils/ordered_key_value.h</label>
        <link refid="ordered__key__value_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>faiss/utils/utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structfaiss_1_1CMin" prot="public">faiss::CMin</innerclass>
    <innerclass refid="structfaiss_1_1CMax" prot="public">faiss::CMax</innerclass>
    <innernamespace refid="namespacefaiss">faiss</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Meta<sp/>Platforms,<sp/>Inc.<sp/>and<sp/>affiliates.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefaiss" kindref="compound">faiss</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>C<sp/>object:<sp/>uniform<sp/>handling<sp/>of<sp/>min<sp/>and<sp/>max<sp/>heap</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">/**<sp/>The<sp/>C<sp/>object<sp/>gives<sp/>the<sp/>type<sp/>T<sp/>of<sp/>the<sp/>values<sp/>of<sp/>a<sp/>key-value<sp/>storage,<sp/>the<sp/>type</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>the<sp/>keys,<sp/>TI<sp/>and<sp/>the<sp/>comparison<sp/>that<sp/>is<sp/>done:<sp/>CMax<sp/>for<sp/>a<sp/>decreasing</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>series<sp/>and<sp/>CMin<sp/>for<sp/>increasing<sp/>series.<sp/>In<sp/>other<sp/>words,<sp/>for<sp/>a<sp/>given<sp/>threshold</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>threshold,<sp/>an<sp/>incoming<sp/>value<sp/>x<sp/>is<sp/>kept<sp/>if</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>C::cmp(threshold,<sp/>x)</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>true.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TI_&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CMax;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>cmin_nextafter(T<sp/>x);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>cmax_nextafter(T<sp/>x);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>traits<sp/>of<sp/>minheaps<sp/>=<sp/>heaps<sp/>where<sp/>the<sp/>minimum<sp/>value<sp/>is<sp/>stored<sp/>on<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>useful<sp/>to<sp/>find<sp/>the<sp/>*max*<sp/>values<sp/>of<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TI_&gt;</highlight></codeline>
<codeline lineno="42" refid="structfaiss_1_1CMin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfaiss_1_1CMin" kindref="compound">CMin</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T_<sp/>T;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TI_<sp/>TI;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CMax" kindref="compound">CMax&lt;T_, TI_&gt;</ref><sp/><ref refid="structfaiss_1_1CMax" kindref="compound">Crev</ref>;<sp/></highlight><highlight class="comment">//<sp/>reference<sp/>to<sp/>reverse<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cmp(T<sp/>a,<sp/>T<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;<sp/>b;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Similar<sp/>to<sp/>cmp(),<sp/>but<sp/>also<sp/>breaks<sp/>ties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>comparing<sp/>the<sp/>second<sp/>pair<sp/>of<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cmp2(T<sp/>a1,<sp/>T<sp/>b1,<sp/>TI<sp/>a2,<sp/>TI<sp/>b2)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a1<sp/>&lt;<sp/>b1)<sp/>||<sp/>((a1<sp/>==<sp/>b1)<sp/>&amp;&amp;<sp/>(a2<sp/>&lt;<sp/>b2));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>neutral()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;T&gt;::lowest();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_max<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>nextafter(T<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmin_nextafter(x);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TI_&gt;</highlight></codeline>
<codeline lineno="65" refid="structfaiss_1_1CMax" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfaiss_1_1CMax" kindref="compound">CMax</ref><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T_<sp/>T;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TI_<sp/>TI;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CMin" kindref="compound">CMin&lt;T_, TI_&gt;</ref><sp/><ref refid="structfaiss_1_1CMin" kindref="compound">Crev</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cmp(T<sp/>a,<sp/>T<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&gt;<sp/>b;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Similar<sp/>to<sp/>cmp(),<sp/>but<sp/>also<sp/>breaks<sp/>ties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>comparing<sp/>the<sp/>second<sp/>pair<sp/>of<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cmp2(T<sp/>a1,<sp/>T<sp/>b1,<sp/>TI<sp/>a2,<sp/>TI<sp/>b2)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a1<sp/>&gt;<sp/>b1)<sp/>||<sp/>((a1<sp/>==<sp/>b1)<sp/>&amp;&amp;<sp/>(a2<sp/>&gt;<sp/>b2));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>neutral()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;T&gt;::max();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_max<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>nextafter(T<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmax_nextafter(x);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cmin_nextafter&lt;float&gt;(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nextafterf(x,<sp/>-HUGE_VALF);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cmax_nextafter&lt;float&gt;(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nextafterf(x,<sp/>HUGE_VALF);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>cmin_nextafter&lt;uint16_t&gt;(uint16_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>cmax_nextafter&lt;uint16_t&gt;(uint16_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>faiss</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="faiss/utils/ordered_key_value.h"/>
  </compounddef>
</doxygen>
