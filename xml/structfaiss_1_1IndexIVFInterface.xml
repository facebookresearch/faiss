<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1IndexIVFInterface" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>faiss::IndexIVFInterface</compoundname>
    <basecompoundref refid="structfaiss_1_1Level1Quantizer" prot="public" virt="non-virtual">faiss::Level1Quantizer</basecompoundref>
    <derivedcompoundref refid="structfaiss_1_1IndexIVF" prot="public" virt="non-virtual">faiss::IndexIVF</derivedcompoundref>
    <derivedcompoundref refid="classfaiss_1_1gpu_1_1GpuIndexIVF" prot="public" virt="non-virtual">faiss::gpu::GpuIndexIVF</derivedcompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1IndexIVFInterface_1a04b49a4e8a7bce73757905062cf3e2d2" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::IndexIVFInterface::nprobe</definition>
        <argsstring></argsstring>
        <name>nprobe</name>
        <qualifiedname>faiss::IndexIVFInterface::nprobe</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
<para>number of probes at query time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="89" column="12" bodyfile="faiss/IndexIVF.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1IndexIVFInterface_1a205287f5e7fa7e1d5c5f98e19074c636" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::IndexIVFInterface::max_codes</definition>
        <argsstring></argsstring>
        <name>max_codes</name>
        <qualifiedname>faiss::IndexIVFInterface::max_codes</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>max nb of codes to visit to do a query </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="90" column="12" bodyfile="faiss/IndexIVF.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a3cf99e2ee92b8558a066f821efab95d5" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> *</type>
        <definition>Index* faiss::Level1Quantizer::quantizer</definition>
        <argsstring></argsstring>
        <name>quantizer</name>
        <qualifiedname>faiss::Level1Quantizer::quantizer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>quantizer that maps vectors to inverted lists </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="35" column="11" bodyfile="faiss/IndexIVF.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a1c4fc9d874d9492ee0ea27a5be388fa7" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::Level1Quantizer::nlist</definition>
        <argsstring></argsstring>
        <name>nlist</name>
        <qualifiedname>faiss::Level1Quantizer::nlist</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>number of inverted lists </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="38" column="12" bodyfile="faiss/IndexIVF.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a1dcea762fc322fdcffe64f78994edea0" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char faiss::Level1Quantizer::quantizer_trains_alone</definition>
        <argsstring></argsstring>
        <name>quantizer_trains_alone</name>
        <qualifiedname>faiss::Level1Quantizer::quantizer_trains_alone</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>= 0: use the quantizer as index in a kmeans training = 1: just pass on the training set to the train() of the quantizer = 2: kmeans training on a flat index + add the centroids to the quantizer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="45" column="10" bodyfile="faiss/IndexIVF.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1ab688c629cd42122d73517078b87f483d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::Level1Quantizer::own_fields</definition>
        <argsstring></argsstring>
        <name>own_fields</name>
        <qualifiedname>faiss::Level1Quantizer::own_fields</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>whether object owns the quantizer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="46" column="10" bodyfile="faiss/IndexIVF.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1abb7097ed40b15ba0af08af6d03608f72" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1ClusteringParameters" kindref="compound">ClusteringParameters</ref></type>
        <definition>ClusteringParameters faiss::Level1Quantizer::cp</definition>
        <argsstring></argsstring>
        <name>cp</name>
        <qualifiedname>faiss::Level1Quantizer::cp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to override default clustering params </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="48" column="26" bodyfile="faiss/IndexIVF.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a45d29dd6a5c53789c08e5ceb3f63d989" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> *</type>
        <definition>Index* faiss::Level1Quantizer::clustering_index</definition>
        <argsstring></argsstring>
        <name>clustering_index</name>
        <qualifiedname>faiss::Level1Quantizer::clustering_index</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>to override index used during clustering </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="50" column="11" bodyfile="faiss/IndexIVF.h" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1IndexIVFInterface_1a480a32625aa7c6ae5fd49afaacfa7fd1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::IndexIVFInterface::IndexIVFInterface</definition>
        <argsstring>(Index *quantizer=nullptr, size_t nlist=0)</argsstring>
        <name>IndexIVFInterface</name>
        <qualifiedname>faiss::IndexIVFInterface::IndexIVFInterface</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> *</type>
          <declname>quantizer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>nlist</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="92" column="14" bodyfile="faiss/IndexIVF.h" bodystart="92" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIVFInterface_1a79e6f1be6c93c72138bf591551891374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void faiss::IndexIVFInterface::search_preassigned</definition>
        <argsstring>(idx_t n, const float *x, idx_t k, const idx_t *assign, const float *centroid_dis, float *distances, idx_t *labels, bool store_pairs, const IVFSearchParameters *params=nullptr, IndexIVFStats *stats=nullptr) const =0</argsstring>
        <name>search_preassigned</name>
        <qualifiedname>faiss::IndexIVFInterface::search_preassigned</qualifiedname>
        <reimplementedby refid="structfaiss_1_1IndexIVF_1aa5cf61c63eb9ccc68edc13fe8f5ba854">search_preassigned</reimplementedby>
        <reimplementedby refid="structfaiss_1_1IndexIVFFastScan_1a4b2f2c0a1bd98fcb78a3ebd77261cfc1">search_preassigned</reimplementedby>
        <reimplementedby refid="structfaiss_1_1IndexIVFFlatDedup_1a9eea401290ff9f9181483c9062195f6f">search_preassigned</reimplementedby>
        <reimplementedby refid="structfaiss_1_1IndexIVFPQR_1a681e937fcfd9bd93cac5f9eff9d6021a">search_preassigned</reimplementedby>
        <reimplementedby refid="structfaiss_1_1IndexIVFRaBitQFastScan_1a478a27e31f57e091cbab939970ad0ff7">search_preassigned</reimplementedby>
        <reimplementedby refid="classfaiss_1_1gpu_1_1GpuIndexIVF_1a95222865727ad3693314e5c649a48f68">search_preassigned</reimplementedby>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>assign</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>centroid_dis</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>distances</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>store_pairs</declname>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1SearchParametersIVF" kindref="compound">IVFSearchParameters</ref> *</type>
          <declname>params</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="structfaiss_1_1IndexIVFStats" kindref="compound">IndexIVFStats</ref> *</type>
          <declname>stats</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>search a set of vectors, that are pre-quantized by the IVF quantizer. Fill in the corresponding heaps with the query results. The default implementation uses InvertedListScanners to do the search.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>nb of vectors to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>query vectors, size nx * d </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>assign</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse quantization indices, size nx * nprobe </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centroid_dis</parametername>
</parameternamelist>
<parameterdescription>
<para>distances to coarse centroids, size nx * nprobe </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>output distances, size n * k </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>output labels, size n * k </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store_pairs</parametername>
</parameternamelist>
<parameterdescription>
<para>store inv list index + inv list offset instead in upper/lower 32 bit of result, instead of ids (used for reranking). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>used to override the object&apos;s search parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stats</parametername>
</parameternamelist>
<parameterdescription>
<para>search stats to be updated (can be null) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="114" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIVFInterface_1aa1981dcda1ef525d40c0ef7873ef63d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void faiss::IndexIVFInterface::range_search_preassigned</definition>
        <argsstring>(idx_t nx, const float *x, float radius, const idx_t *keys, const float *coarse_dis, RangeSearchResult *result, bool store_pairs=false, const IVFSearchParameters *params=nullptr, IndexIVFStats *stats=nullptr) const =0</argsstring>
        <name>range_search_preassigned</name>
        <qualifiedname>faiss::IndexIVFInterface::range_search_preassigned</qualifiedname>
        <reimplementedby refid="classfaiss_1_1gpu_1_1GpuIndexIVF_1a6e2f09e05deee4195a49ed81333a97e2">range_search_preassigned</reimplementedby>
        <reimplementedby refid="structfaiss_1_1IndexIVF_1a8c2ff8d112f7f381c8cdcc5229b004fe">range_search_preassigned</reimplementedby>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>coarse_dis</declname>
        </param>
        <param>
          <type><ref refid="structfaiss_1_1RangeSearchResult" kindref="compound">RangeSearchResult</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>store_pairs</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1SearchParametersIVF" kindref="compound">IVFSearchParameters</ref> *</type>
          <declname>params</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="structfaiss_1_1IndexIVFStats" kindref="compound">IndexIVFStats</ref> *</type>
          <declname>stats</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Range search a set of vectors, that are pre-quantized by the IVF quantizer. Fill in the RangeSearchResults results. The default implementation uses InvertedListScanners to do the search.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>nb of vectors to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>query vectors, size nx * d </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>assign</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse quantization indices, size nx * nprobe </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centroid_dis</parametername>
</parameternamelist>
<parameterdescription>
<para>distances to coarse centroids, size nx * nprobe </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Output results </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store_pairs</parametername>
</parameternamelist>
<parameterdescription>
<para>store inv list index + inv list offset instead in upper/lower 32 bit of result, instead of ids (used for reranking). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>used to override the object&apos;s search parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stats</parametername>
</parameternamelist>
<parameterdescription>
<para>search stats to be updated (can be null) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="142" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIVFInterface_1a1f3f3a224926ad0bb98f4fe10aaf8068" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual faiss::IndexIVFInterface::~IndexIVFInterface</definition>
        <argsstring>()</argsstring>
        <name>~IndexIVFInterface</name>
        <qualifiedname>faiss::IndexIVFInterface::~IndexIVFInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="153" column="13" bodyfile="faiss/IndexIVF.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a0069a6ee1e32c2e0c1c7df9a95740dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::Level1Quantizer::train_q1</definition>
        <argsstring>(size_t n, const float *x, bool verbose, MetricType metric_type)</argsstring>
        <name>train_q1</name>
        <qualifiedname>faiss::Level1Quantizer::train_q1</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1afd12191c638da74760ff397cf319752c" kindref="member">MetricType</ref></type>
          <declname>metric_type</declname>
        </param>
        <briefdescription>
<para>Trains the quantizer and calls train_residual to train sub-quantizers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a28fb5379de2f35f1b86ae5019ec4128f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::Level1Quantizer::coarse_code_size</definition>
        <argsstring>() const</argsstring>
        <name>coarse_code_size</name>
        <qualifiedname>faiss::Level1Quantizer::coarse_code_size</qualifiedname>
        <briefdescription>
<para>compute the number of bytes required to store list ids </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="60" column="12"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a91df00b85de103bce33993ce659c832c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::Level1Quantizer::encode_listno</definition>
        <argsstring>(idx_t list_no, uint8_t *code) const</argsstring>
        <name>encode_listno</name>
        <qualifiedname>faiss::Level1Quantizer::encode_listno</qualifiedname>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a19831255dc8861b785b9782a32f65a2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
        <definition>idx_t faiss::Level1Quantizer::decode_listno</definition>
        <argsstring>(const uint8_t *code) const</argsstring>
        <name>decode_listno</name>
        <qualifiedname>faiss::Level1Quantizer::decode_listno</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="62" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>faiss::IndexIVF</label>
        <link refid="structfaiss_1_1IndexIVF"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>faiss::IndexIVFAdditiveQuantizer</label>
        <link refid="structfaiss_1_1IndexIVFAdditiveQuantizer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>faiss::IndexIVFAdditiveQuantizerFastScan</label>
        <link refid="structfaiss_1_1IndexIVFAdditiveQuantizerFastScan"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>faiss::IndexIVFFastScan</label>
        <link refid="structfaiss_1_1IndexIVFFastScan"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>faiss::IndexIVFFlat</label>
        <link refid="structfaiss_1_1IndexIVFFlat"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>faiss::IndexIVFFlatDedup</label>
        <link refid="structfaiss_1_1IndexIVFFlatDedup"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>faiss::IndexIVFFlatPanorama</label>
        <link refid="structfaiss_1_1IndexIVFFlatPanorama"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>faiss::IndexIVFInterface</label>
        <link refid="structfaiss_1_1IndexIVFInterface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>faiss::IndexIVFLocalSearchQuantizer</label>
        <link refid="structfaiss_1_1IndexIVFLocalSearchQuantizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>faiss::IndexIVFLocalSearchQuantizerFastScan</label>
        <link refid="structfaiss_1_1IndexIVFLocalSearchQuantizerFastScan"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>faiss::IndexIVFPQ</label>
        <link refid="structfaiss_1_1IndexIVFPQ"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>faiss::IndexIVFPQFastScan</label>
        <link refid="structfaiss_1_1IndexIVFPQFastScan"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>faiss::IndexIVFPQR</label>
        <link refid="structfaiss_1_1IndexIVFPQR"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>faiss::IndexIVFProductLocalSearchQuantizer</label>
        <link refid="structfaiss_1_1IndexIVFProductLocalSearchQuantizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>faiss::IndexIVFProductLocalSearchQuantizerFastScan</label>
        <link refid="structfaiss_1_1IndexIVFProductLocalSearchQuantizerFastScan"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>faiss::IndexIVFProductResidualQuantizer</label>
        <link refid="structfaiss_1_1IndexIVFProductResidualQuantizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>faiss::IndexIVFProductResidualQuantizerFastScan</label>
        <link refid="structfaiss_1_1IndexIVFProductResidualQuantizerFastScan"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>faiss::IndexIVFRaBitQ</label>
        <link refid="structfaiss_1_1IndexIVFRaBitQ"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>faiss::IndexIVFRaBitQFastScan</label>
        <link refid="structfaiss_1_1IndexIVFRaBitQFastScan"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>faiss::IndexIVFResidualQuantizer</label>
        <link refid="structfaiss_1_1IndexIVFResidualQuantizer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>faiss::IndexIVFResidualQuantizerFastScan</label>
        <link refid="structfaiss_1_1IndexIVFResidualQuantizerFastScan"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>faiss::IndexIVFScalarQuantizer</label>
        <link refid="structfaiss_1_1IndexIVFScalarQuantizer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>faiss::IndexIVFSpectralHash</label>
        <link refid="structfaiss_1_1IndexIVFSpectralHash"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::Level1Quantizer</label>
        <link refid="structfaiss_1_1Level1Quantizer"/>
      </node>
      <node id="25">
        <label>faiss::gpu::GpuIndexIVF</label>
        <link refid="classfaiss_1_1gpu_1_1GpuIndexIVF"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>faiss::gpu::GpuIndexIVFFlat</label>
        <link refid="classfaiss_1_1gpu_1_1GpuIndexIVFFlat"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>faiss::gpu::GpuIndexIVFPQ</label>
        <link refid="classfaiss_1_1gpu_1_1GpuIndexIVFPQ"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>faiss::gpu::GpuIndexIVFScalarQuantizer</label>
        <link refid="classfaiss_1_1gpu_1_1GpuIndexIVFScalarQuantizer"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>faiss::ClusteringParameters</label>
        <link refid="structfaiss_1_1ClusteringParameters"/>
      </node>
      <node id="3">
        <label>faiss::Index</label>
        <link refid="structfaiss_1_1Index"/>
      </node>
      <node id="1">
        <label>faiss::IndexIVFInterface</label>
        <link refid="structfaiss_1_1IndexIVFInterface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::Level1Quantizer</label>
        <link refid="structfaiss_1_1Level1Quantizer"/>
        <childnode refid="3" relation="usage">
          <edgelabel>clustering_index</edgelabel>
          <edgelabel>quantizer</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cp</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/IndexIVF.h" line="88" column="1" bodyfile="faiss/IndexIVF.h" bodystart="88" bodyend="154"/>
    <listofallmembers>
      <member refid="structfaiss_1_1Level1Quantizer_1a45d29dd6a5c53789c08e5ceb3f63d989" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>clustering_index</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a28fb5379de2f35f1b86ae5019ec4128f" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>coarse_code_size</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1abb7097ed40b15ba0af08af6d03608f72" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>cp</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a19831255dc8861b785b9782a32f65a2a" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>decode_listno</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a91df00b85de103bce33993ce659c832c" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>encode_listno</name></member>
      <member refid="structfaiss_1_1IndexIVFInterface_1a480a32625aa7c6ae5fd49afaacfa7fd1" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>IndexIVFInterface</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a7262e1eb542b177308dab0c043e90d01" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>Level1Quantizer</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a7623b6432ff9faee737ebe36b415fa18" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>Level1Quantizer</name></member>
      <member refid="structfaiss_1_1IndexIVFInterface_1a205287f5e7fa7e1d5c5f98e19074c636" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>max_codes</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a1c4fc9d874d9492ee0ea27a5be388fa7" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>nlist</name></member>
      <member refid="structfaiss_1_1IndexIVFInterface_1a04b49a4e8a7bce73757905062cf3e2d2" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>nprobe</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1ab688c629cd42122d73517078b87f483d" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>own_fields</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a3cf99e2ee92b8558a066f821efab95d5" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>quantizer</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a1dcea762fc322fdcffe64f78994edea0" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>quantizer_trains_alone</name></member>
      <member refid="structfaiss_1_1IndexIVFInterface_1aa1981dcda1ef525d40c0ef7873ef63d9" prot="public" virt="pure-virtual"><scope>faiss::IndexIVFInterface</scope><name>range_search_preassigned</name></member>
      <member refid="structfaiss_1_1IndexIVFInterface_1a79e6f1be6c93c72138bf591551891374" prot="public" virt="pure-virtual"><scope>faiss::IndexIVFInterface</scope><name>search_preassigned</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a0069a6ee1e32c2e0c1c7df9a95740dd4" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>train_q1</name></member>
      <member refid="structfaiss_1_1IndexIVFInterface_1a1f3f3a224926ad0bb98f4fe10aaf8068" prot="public" virt="virtual"><scope>faiss::IndexIVFInterface</scope><name>~IndexIVFInterface</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1ab0d7fc7420f306522923a96feddae7ca" prot="public" virt="non-virtual"><scope>faiss::IndexIVFInterface</scope><name>~Level1Quantizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
