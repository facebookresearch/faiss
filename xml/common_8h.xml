<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="common_8h" kind="file" language="C++">
    <compoundname>common.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes refid="platform__macros_8h" local="no">faiss/impl/platform_macros.h</includes>
    <includedby refid="hamdis-inl_8h" local="no">faiss/utils/hamming_distance/hamdis-inl.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>faiss/impl/platform_macros.h</label>
        <link refid="platform__macros_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>faiss/utils/hamming_distance/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>cstdio</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>faiss/utils/hamming.h</label>
        <link refid="hamming_8h_source"/>
      </node>
      <node id="1">
        <label>faiss/utils/hamming_distance/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>faiss/utils/hamming_distance/hamdis-inl.h</label>
        <link refid="hamdis-inl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacefaiss">faiss</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="common_8h_1af54d4643f130c0bc719a8d181ca68a2b" prot="public" static="no">
        <type>int32_t</type>
        <definition>using hamdis_t =  int32_t</definition>
        <argsstring></argsstring>
        <name>hamdis_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/common.h" line="16" column="1" bodyfile="faiss/utils/hamming_distance/common.h" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Meta<sp/>Platforms,<sp/>Inc.<sp/>and<sp/>affiliates.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FAISS_hamming_common_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_hamming_common_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/impl/platform_macros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>Hamming<sp/>distance<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">hamdis_t<sp/>=<sp/>int32_t;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefaiss" kindref="compound">faiss</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>trust<sp/>the<sp/>compiler<sp/>to<sp/>provide<sp/>efficient<sp/>popcount<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popcount32(uint32_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcount(x);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>popcount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popcount64(uint64_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcountl(x);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>table<sp/>was<sp/>moved<sp/>from<sp/>.cpp<sp/>to<sp/>.h<sp/>file,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise<sp/>it<sp/>was<sp/>causing<sp/>compilation<sp/>errors<sp/>while<sp/>trying<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compile<sp/>swig<sp/>modules<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint8_t<sp/>hamdis_tab_ham_bytes[256]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>1,<sp/>2,<sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>2,<sp/>3,<sp/>3,<sp/>4,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>2,<sp/>3,<sp/>3,<sp/>4,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>5,<sp/>6,<sp/>6,<sp/>7,<sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>5,<sp/>6,<sp/>6,<sp/>7,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>5,<sp/>6,<sp/>6,<sp/>7,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>5,<sp/>6,<sp/>6,<sp/>7,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>5,<sp/>6,<sp/>6,<sp/>7,<sp/>5,<sp/>6,<sp/>6,<sp/>7,<sp/>6,<sp/>7,<sp/>7,<sp/>8};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>faiss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="faiss/utils/hamming_distance/common.h"/>
  </compounddef>
</doxygen>
