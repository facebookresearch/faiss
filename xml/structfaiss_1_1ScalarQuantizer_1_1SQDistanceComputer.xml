<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>faiss::ScalarQuantizer::SQDistanceComputer</compoundname>
    <basecompoundref refid="structfaiss_1_1FlatCodesDistanceComputer" prot="public" virt="non-virtual">faiss::FlatCodesDistanceComputer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1ade7fed44ffa6f4ea257136108dadb472" prot="public" static="no" mutable="no">
        <type>const float *</type>
        <definition>const float* faiss::ScalarQuantizer::SQDistanceComputer::q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <qualifiedname>faiss::ScalarQuantizer::SQDistanceComputer::q</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/ScalarQuantizer.h" line="101" column="21" bodyfile="faiss/impl/ScalarQuantizer.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1FlatCodesDistanceComputer_1a4ec2d004151ff20fe2b7f1189b668cb6" prot="public" static="no" mutable="no">
        <type>const uint8_t *</type>
        <definition>const uint8_t* faiss::FlatCodesDistanceComputer::codes</definition>
        <argsstring></argsstring>
        <name>codes</name>
        <qualifiedname>faiss::FlatCodesDistanceComputer::codes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/DistanceComputer.h" line="113" column="19" bodyfile="faiss/impl/DistanceComputer.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1FlatCodesDistanceComputer_1a1cf8e1e4652cef0e3dedd38a05f4ff8a" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::FlatCodesDistanceComputer::code_size</definition>
        <argsstring></argsstring>
        <name>code_size</name>
        <qualifiedname>faiss::FlatCodesDistanceComputer::code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/DistanceComputer.h" line="114" column="12" bodyfile="faiss/impl/DistanceComputer.h" bodystart="114" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1a7a2c279fca53e025a59587c966a81ee3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::ScalarQuantizer::SQDistanceComputer::SQDistanceComputer</definition>
        <argsstring>()</argsstring>
        <name>SQDistanceComputer</name>
        <qualifiedname>faiss::ScalarQuantizer::SQDistanceComputer::SQDistanceComputer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/ScalarQuantizer.h" line="103" column="9" bodyfile="faiss/impl/ScalarQuantizer.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1ae0e1a83a0ce618cc50f572c82b417e1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float faiss::ScalarQuantizer::SQDistanceComputer::query_to_code</definition>
        <argsstring>(const uint8_t *code) const =0</argsstring>
        <name>query_to_code</name>
        <qualifiedname>faiss::ScalarQuantizer::SQDistanceComputer::query_to_code</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/ScalarQuantizer.h" line="105" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1a11e1e24a0e654098c5394e934faeb919" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>float</type>
        <definition>float faiss::ScalarQuantizer::SQDistanceComputer::distance_to_code</definition>
        <argsstring>(const uint8_t *code) final</argsstring>
        <name>distance_to_code</name>
        <qualifiedname>faiss::ScalarQuantizer::SQDistanceComputer::distance_to_code</qualifiedname>
        <reimplements refid="structfaiss_1_1FlatCodesDistanceComputer_1a25f3f5c0fabb20d56e29ac7ecef3eb11">distance_to_code</reimplements>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>compute distance of current query to an encoded vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/ScalarQuantizer.h" line="107" column="15" bodyfile="faiss/impl/ScalarQuantizer.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1FlatCodesDistanceComputer_1ae9a61bfa23567fc0ee689c2e0b1ac287" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float</type>
        <definition>float faiss::FlatCodesDistanceComputer::operator()</definition>
        <argsstring>(idx_t i) override</argsstring>
        <name>operator()</name>
        <qualifiedname>faiss::FlatCodesDistanceComputer::operator()</qualifiedname>
        <reimplements refid="structfaiss_1_1DistanceComputer_1a4d71be87bbd904043f6bc2fae03d037f">operator()</reimplements>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>compute distance of vector i to current query </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/DistanceComputer.h" line="121" column="11" bodyfile="faiss/impl/DistanceComputer.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1DistanceComputer_1aaa4472453365b786adc2ab21e9cee5ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void faiss::DistanceComputer::set_query</definition>
        <argsstring>(const float *x)=0</argsstring>
        <name>set_query</name>
        <qualifiedname>faiss::DistanceComputer::set_query</qualifiedname>
        <reimplementedby refid="structfaiss_1_1NegativeDistanceComputer_1aa49c65103c68f2d8b56bf3f8d5ee2826">set_query</reimplementedby>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>called before computing distances. Pointer x should remain valid while operator () is called </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/DistanceComputer.h" line="28" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1DistanceComputer_1af6e114e82ca59caa7040d0bd3ba1c4ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::DistanceComputer::distances_batch_4</definition>
        <argsstring>(const idx_t idx0, const idx_t idx1, const idx_t idx2, const idx_t idx3, float &amp;dis0, float &amp;dis1, float &amp;dis2, float &amp;dis3)</argsstring>
        <name>distances_batch_4</name>
        <qualifiedname>faiss::DistanceComputer::distances_batch_4</qualifiedname>
        <reimplementedby refid="structfaiss_1_1NegativeDistanceComputer_1a62901b5b662e6b8f791f166d85e8525c">distances_batch_4</reimplementedby>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>idx0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>idx1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>idx2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>idx3</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>dis0</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>dis1</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>dis2</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>dis3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute distances of current query to 4 stored vectors. certain <ref refid="structfaiss_1_1DistanceComputer" kindref="compound">DistanceComputer</ref> implementations may benefit heavily from this. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/DistanceComputer.h" line="36" column="18" bodyfile="faiss/impl/DistanceComputer.h" bodystart="36" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1DistanceComputer_1a4b7236a757c788401aac00598ed902c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float faiss::DistanceComputer::symmetric_dis</definition>
        <argsstring>(idx_t i, idx_t j)=0</argsstring>
        <name>symmetric_dis</name>
        <qualifiedname>faiss::DistanceComputer::symmetric_dis</qualifiedname>
        <reimplementedby refid="structfaiss_1_1NegativeDistanceComputer_1a64ecc52adf1c541e943abb22290da1df">symmetric_dis</reimplementedby>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>compute distance between two stored vectors </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/DistanceComputer.h" line="57" column="19"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>faiss::DistanceComputer</label>
        <link refid="structfaiss_1_1DistanceComputer"/>
      </node>
      <node id="2">
        <label>faiss::FlatCodesDistanceComputer</label>
        <link refid="structfaiss_1_1FlatCodesDistanceComputer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>faiss::ScalarQuantizer::SQDistanceComputer</label>
        <link refid="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>faiss::DistanceComputer</label>
        <link refid="structfaiss_1_1DistanceComputer"/>
      </node>
      <node id="2">
        <label>faiss::FlatCodesDistanceComputer</label>
        <link refid="structfaiss_1_1FlatCodesDistanceComputer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>faiss::ScalarQuantizer::SQDistanceComputer</label>
        <link refid="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/impl/ScalarQuantizer.h" line="100" column="5" bodyfile="faiss/impl/ScalarQuantizer.h" bodystart="100" bodyend="110"/>
    <listofallmembers>
      <member refid="structfaiss_1_1FlatCodesDistanceComputer_1a1cf8e1e4652cef0e3dedd38a05f4ff8a" prot="public" virt="non-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>code_size</name></member>
      <member refid="structfaiss_1_1FlatCodesDistanceComputer_1a4ec2d004151ff20fe2b7f1189b668cb6" prot="public" virt="non-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>codes</name></member>
      <member refid="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1a11e1e24a0e654098c5394e934faeb919" prot="public" virt="virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>distance_to_code</name></member>
      <member refid="structfaiss_1_1DistanceComputer_1af6e114e82ca59caa7040d0bd3ba1c4ff" prot="public" virt="virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>distances_batch_4</name></member>
      <member refid="structfaiss_1_1FlatCodesDistanceComputer_1ae40ded398aac001acfbbab90926f1bd3" prot="public" virt="non-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>FlatCodesDistanceComputer</name></member>
      <member refid="structfaiss_1_1FlatCodesDistanceComputer_1aa57e61e170bdad3ac7d138af3d76b15d" prot="public" virt="non-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>FlatCodesDistanceComputer</name></member>
      <member refid="structfaiss_1_1FlatCodesDistanceComputer_1ae9a61bfa23567fc0ee689c2e0b1ac287" prot="public" virt="virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1ade7fed44ffa6f4ea257136108dadb472" prot="public" virt="non-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>q</name></member>
      <member refid="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1ae0e1a83a0ce618cc50f572c82b417e1e" prot="public" virt="pure-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>query_to_code</name></member>
      <member refid="structfaiss_1_1DistanceComputer_1aaa4472453365b786adc2ab21e9cee5ec" prot="public" virt="pure-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>set_query</name></member>
      <member refid="structfaiss_1_1ScalarQuantizer_1_1SQDistanceComputer_1a7a2c279fca53e025a59587c966a81ee3" prot="public" virt="non-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>SQDistanceComputer</name></member>
      <member refid="structfaiss_1_1DistanceComputer_1a4b7236a757c788401aac00598ed902c7" prot="public" virt="pure-virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>symmetric_dis</name></member>
      <member refid="structfaiss_1_1DistanceComputer_1a804c42a1f74d9382d5a6c94affd7bfda" prot="public" virt="virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>~DistanceComputer</name></member>
      <member refid="structfaiss_1_1FlatCodesDistanceComputer_1a743c45ee4140ff06315d1ce3f7ec4cb2" prot="public" virt="virtual"><scope>faiss::ScalarQuantizer::SQDistanceComputer</scope><name>~FlatCodesDistanceComputer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
